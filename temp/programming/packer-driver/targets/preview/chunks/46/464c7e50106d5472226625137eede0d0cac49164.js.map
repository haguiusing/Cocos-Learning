{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/Lesson06_.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","director","ccclass","property","Lesson06_","posZ","createNewNode","node","setPosition","getScene","addChild","cloneNode","sourceNode","scene","cloned","createPrefabNode","prefab","destroyNode","target","destroy","update","deltaTime","isValid","console","info","start","scheduleOnce"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,Q,OAAAA,Q;;;;;iFAD3D;;;;;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;;2BAEaQ,S,WADZF,OAAO,CAAC,WAAD,C,UAcHC,QAAQ,CAACL,IAAD,C,UAcRK,QAAQ,CAACJ,MAAD,C,UAcRI,QAAQ,CAACL,IAAD,C,2BA1Cb,MACaM,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;;AASrC;;AAEA;AACA;AAZqC;;AAuBrC;;AAEA;AACA;AA1BqC;;AAqCrC;;AAEA;AACA;AAxCqC;;AAgDrC;;AAEA;AACA;AAnDqC,eAoD7BQ,IApD6B,GAoDtB,CAAC,EApDqB;AAAA;;AAErC;AACA;AACQC,QAAAA,aAAa,GAAG;AACpB,cAAMC,IAAI,GAAG,IAAIT,IAAJ,CAAS,QAAT,CAAb;AACAS,UAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAC,EAAxB,EAFoB,CAE+B;;AACnDP,UAAAA,QAAQ,CAACQ,QAAT,GAAqBC,QAArB,CAA8BH,IAA9B,EAHoB,CAG+B;AACtD;;AAMsD;AAE/CI,QAAAA,SAAS,GAAG;AAChB,cAAI,CAAC,KAAKC,UAAV,EAAsB;AACtB,cAAMC,KAAK,GAAGZ,QAAQ,CAACQ,QAAT,EAAd;AACA,cAAMK,MAAM,GAAGd,WAAW,CAAC,KAAKY,UAAN,CAA1B,CAHgB,CAGqC;;AACrDC,UAAAA,KAAK,CAACH,QAAN,CAAeI,MAAf;AACAA,UAAAA,MAAM,CAACN,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAC,EAA1B;AACH;;AAMsD;AAE/CO,QAAAA,gBAAgB,GAAG;AACvB,cAAI,CAAC,KAAKC,MAAV,EAAkB;AAClB,cAAMH,KAAK,GAAGZ,QAAQ,CAACQ,QAAT,EAAd;AACA,cAAMF,IAAI,GAAGP,WAAW,CAAC,KAAKgB,MAAN,CAAxB,CAHuB,CAG8B;;AACrDH,UAAAA,KAAK,CAACH,QAAN,CAAeH,IAAf;AACAA,UAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACH;;AAMsD;AAE/CS,QAAAA,WAAW,GAAG;AAClB,cAAI,CAAC,KAAKC,MAAV,EAAkB;AAClB,eAAKA,MAAL,CAAYC,OAAZ,GAFkB,CAEiC;AACtD;;AAMSC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AAEhC,cAAI,CAAC,KAAKH,MAAV,EAAkB,OAFc,CAIhC;;AACA,eAAKb,IAAL,IAAa,IAAIgB,SAAjB;;AACA,cAAI,KAAKH,MAAL,CAAYI,OAAhB,EAAyB;AACrB,iBAAKJ,MAAL,CAAYV,WAAZ,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAKH,IAAnC;AACAkB,YAAAA,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB,KAAKN,MAAL,CAAYI,OAArC;AACH;AACJ,SA/DoC,CAgErC;;AAEA;AACA;;;AACUG,QAAAA,KAAK,GAAG;AACd;AACA,eAAKC,YAAL,CAAkB,MAAM,KAAKT,WAAL,EAAxB,EAA4C,CAA5C;AACH,SAvEoC,CAwErC;;;AAxEqC,O;;;;;iBAcV,I;;;;;;;iBAcF,I;;;;;;;iBAcF,I","sourcesContent":["// Lesson0X_.ts\nimport { _decorator, Component, Node, Prefab, instantiate, director } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 创建与销毁节点示例\n * 核心类：Lesson06_\n */\n@ccclass('Lesson06_')\nexport class Lesson06_ extends Component {\n\n    /* ------------------ 1. 创建新节点 ------------------ */\n    //#region 1. 创建新节点\n    private createNewNode() {\n        const node = new Node('NewBox');\n        node.setPosition(0, 0, -10);                       // 只是创建，尚未加入场景\n        director.getScene()!.addChild(node);               // 加入场景根节点\n    }\n    //#endregion\n\n    /* ------------------ 2. 克隆已有节点 ------------------ */\n    //#region 2. 克隆已有节点\n    @property(Node)\n    private sourceNode: Node = null!;                      // 在属性检查器拖拽赋值\n\n    private cloneNode() {\n        if (!this.sourceNode) return;\n        const scene = director.getScene()!;\n        const cloned = instantiate(this.sourceNode);         // 克隆\n        scene.addChild(cloned);\n        cloned.setPosition(0, 0, -10);\n    }\n    //#endregion\n\n    /* ------------------ 3. 创建预制节点 ------------------ */\n    //#region 3. 创建预制节点\n    @property(Prefab)\n    private prefab: Prefab = null!;                        // 在属性检查器拖拽赋值\n\n    private createPrefabNode() {\n        if (!this.prefab) return;\n        const scene = director.getScene()!;\n        const node = instantiate(this.prefab);               // 实例化预制\n        scene.addChild(node);\n        node.setPosition(0, 0, 0);\n    }\n    //#endregion\n\n    /* ------------------ 4. 销毁节点 ------------------ */\n    //#region 4. 销毁节点\n    @property(Node)\n    private target: Node = null!;                          // 演示销毁的目标节点\n\n    private destroyNode() {\n        if (!this.target) return;\n        this.target.destroy();                             // 标记销毁（本帧末真正释放）\n    }\n    //#endregion\n\n    /* ------------------ 5. 判断节点是否有效 ------------------ */\n    //#region 5. 节点有效性\n    private posZ = -20;\n    protected update(deltaTime: number) {\n\n        if (!this.target) return;\n\n        // 每帧移动并打印有效性\n        this.posZ += 1 * deltaTime;\n        if (this.target.isValid) {\n            this.target.setPosition(0, 0, this.posZ);\n            console.info('isValid:', this.target.isValid);\n        }\n    }\n    //#endregion\n\n    /* ------------------ 6. 演示定时销毁 ------------------ */\n    //#region 6. 定时销毁\n    protected start() {\n        // 5 秒后销毁 target\n        this.scheduleOnce(() => this.destroyNode(), 5);\n    }\n    //#endregion\n}"]}