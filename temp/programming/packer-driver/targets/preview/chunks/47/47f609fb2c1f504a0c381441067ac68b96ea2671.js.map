{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson47_UICoordinateTracker.ts"],"names":["_decorator","Component","UICoordinateTracker","Node","EventHandler","log","ccclass","property","Lesson47_UICoordinateTracker","type","getOrCreateUICoordinateTracker","uct","uiCoordinateTracker","getComponent","addComponent","setDistance","value","distance","addSyncEvent","handler","target","node","component","syncEvents","push","onCoordinateMapped","localCoord","distanceRatio","targetNode","setPosition","x","y","z","setTarget","name","onLoad"],"mappings":";;;;;;;;;;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,mB,OAAAA,mB;AAAqBC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,G,OAAAA,G;;;;;oGAF/E;;;;;OAGM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;;8CAEaQ,4B,WADZF,OAAO,CAAC,8BAAD,C,UAKHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UA+CRK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,2BApDb,MACaK,4BADb,SACkDP,SADlD,CAC4D;AAAA;AAAA;;AAExD;AACA;AAHwD;;AA+CxD;;AAEA;AACA;AAlDwD;AAAA;;AAOxD;AACAS,QAAAA,8BAA8B,GAA+B;AAAA;;AACzD,cAAIC,GAAG,4BAAG,KAAKC,mBAAR,oCAA+B,KAAKC,YAAL,CAAkBX,mBAAlB,CAAtC;;AACA,cAAI,CAACS,GAAL,EAAU;AACNA,YAAAA,GAAG,GAAG,KAAKG,YAAL,CAAkBZ,mBAAlB,CAAN;AACAG,YAAAA,GAAG,CAAC,6BAAD,CAAH;AACH;;AACD,iBAAOM,GAAP;AACH,SAfuD,CAgBxD;;AAEA;AACA;;;AACAI,QAAAA,WAAW,CAACC,KAAD,EAAgB;AACvB,cAAML,GAAG,GAAG,KAAKD,8BAAL,EAAZ;AACA,cAAI,CAACC,GAAL,EAAU;AAEVA,UAAAA,GAAG,CAACM,QAAJ,GAAeD,KAAf;AACAX,UAAAA,GAAG,gFAAkBW,KAAlB,CAAH;AACH,SA1BuD,CA2BxD;;AAEA;AACA;;;AACAE,QAAAA,YAAY,GAAG;AACX,cAAMP,GAAG,GAAG,KAAKD,8BAAL,EAAZ;AACA,cAAI,CAACC,GAAL,EAAU;AAEV,cAAMQ,OAAO,GAAG,IAAIf,YAAJ,EAAhB;AACAe,UAAAA,OAAO,CAACC,MAAR,GAAiB,KAAKC,IAAtB;AACAF,UAAAA,OAAO,CAACG,SAAR,GAAoB,8BAApB;AACAH,UAAAA,OAAO,CAACA,OAAR,GAAkB,oBAAlB;AACAR,UAAAA,GAAG,CAACY,UAAJ,CAAeC,IAAf,CAAoBL,OAApB;AACH;;AAEDM,QAAAA,kBAAkB,CAACC,UAAD,EAAmBC,aAAnB,EAA0C;AACxD,eAAKC,UAAL,CAAgBC,WAAhB,CAA4BH,UAA5B,EADwD,CAExD;;AACArB,UAAAA,GAAG,yDAAeqB,UAAU,CAACI,CAA1B,UAAgCJ,UAAU,CAACK,CAA3C,UAAiDL,UAAU,CAACM,CAA5D,iDAA2EL,aAA3E,CAAH;AACH;;AAQDM,QAAAA,SAAS,GAAG;AACR,cAAMtB,GAAG,GAAG,KAAKD,8BAAL,EAAZ;AACA,cAAI,CAACC,GAAD,IAAQ,CAAC,KAAKiB,UAAlB,EAA8B;AAE9BjB,UAAAA,GAAG,CAACS,MAAJ,GAAa,KAAKQ,UAAlB;AACAvB,UAAAA,GAAG,wDAAc,KAAKuB,UAAL,CAAgBM,IAA9B,CAAH;AACH,SA5DuD,CA6DxD;;AAEA;AACA;;;AACAC,QAAAA,MAAM,GAAG;AACL,eAAKpB,WAAL,CAAiB,CAAjB,EADK,CACgB;;AACrB,eAAKG,YAAL,GAFK,CAEgB;;AACrB,eAAKe,SAAL,GAHK,CAGgB;AACxB,SArEuD,CAsExD;;;AAtEwD,O;;;;;iBAKN,I;;;;;;;iBA+CxB,I","sourcesContent":["// Lesson47_UICoordinateTracker.ts\n\nimport { _decorator, Component, UICoordinateTracker, Node, Vec3, EventHandler, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson47_UICoordinateTracker\n * 演示 Cocos Creator 3.8 UICoordinateTracker 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n */\n@ccclass('Lesson47_UICoordinateTracker')\nexport class Lesson47_UICoordinateTracker extends Component {\n\n    /* ========================= 1. 获取/创建 UICoordinateTracker 组件 ========================= */\n    // #region 获取/创建 UICoordinateTracker\n    @property({ type: UICoordinateTracker })\n    uiCoordinateTracker: UICoordinateTracker | null = null;\n\n    /** 运行时动态创建或获取 UICoordinateTracker 组件 */\n    getOrCreateUICoordinateTracker(): UICoordinateTracker | null {\n        let uct = this.uiCoordinateTracker ?? this.getComponent(UICoordinateTracker);\n        if (!uct) {\n            uct = this.addComponent(UICoordinateTracker);\n            log('动态添加 UICoordinateTracker 组件');\n        }\n        return uct;\n    }\n    // #endregion\n\n    /* ========================= 2. 设置距离相机的显示距离 ========================= */\n    // #region 设置显示距离\n    setDistance(value: number) {\n        const uct = this.getOrCreateUICoordinateTracker();\n        if (!uct) return;\n\n        uct.distance = value;\n        log(`设置距离相机的显示距离为: ${value}`);\n    }\n    // #endregion\n\n    /* ========================= 3. 添加映射数据事件 ========================= */\n    // #region 添加映射数据事件\n    addSyncEvent() {\n        const uct = this.getOrCreateUICoordinateTracker();\n        if (!uct) return;\n\n        const handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'Lesson47_UICoordinateTracker';\n        handler.handler = 'onCoordinateMapped';\n        uct.syncEvents.push(handler);\n    }\n\n    onCoordinateMapped(localCoord: Vec3, distanceRatio: number) {\n        this.targetNode.setPosition(localCoord);\n        //this.targetNode.setScale(distanceRatio, distanceRatio, 1);\n        log(`映射后的本地坐标: (${localCoord.x}, ${localCoord.y}, ${localCoord.z}), 距离相机比例: ${distanceRatio}`);\n    }\n    // #endregion\n\n    /* ========================= 4. 设置目标节点 ========================= */\n    // #region 设置目标节点\n    @property({ type: Node })\n    targetNode: Node | null = null;\n\n    setTarget() {\n        const uct = this.getOrCreateUICoordinateTracker();\n        if (!uct || !this.targetNode) return;\n\n        uct.target = this.targetNode;\n        log(`目标节点已设置为: ${this.targetNode.name}`);\n    }\n    // #endregion\n\n    /* ========================= 5. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        this.setDistance(2); // 设置距离相机的显示距离\n        this.addSyncEvent(); // 添加映射数据事件\n        this.setTarget();    // 设置目标节点\n    }\n    // #endregion\n}"]}