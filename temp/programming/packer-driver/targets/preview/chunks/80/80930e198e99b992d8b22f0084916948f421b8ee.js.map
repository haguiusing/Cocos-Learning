{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson49_UISkew.ts"],"names":["_decorator","Component","UISkew","Vec2","log","ccclass","property","Lesson49_UISkew","type","getOrCreateUISkew","skew","uiSkew","getComponent","addComponent","setSkew","x","y","getSkew","out","skewOverTime","duration","targetSkew","startSkew","clone","elapsed","schedule","dt","t","Math","min","lerp","unscheduleAllCallbacks","onLoad","start","scheduleOnce"],"mappings":";;;;;;;;;;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,G,OAAAA,G;;;;;uFAF9C;;;;;OAGM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAE9B;AACA;AACA;AACA;AACA;;iCAEaO,e,WADZF,OAAO,CAAC,iBAAD,C,UAKHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,2BALb,MACaK,eADb,SACqCN,SADrC,CAC+C;AAAA;AAAA;;AAE3C;AACA;AAH2C;AAAA;;AAO3C;AACAQ,QAAAA,iBAAiB,GAAkB;AAAA;;AAC/B,cAAIC,IAAI,mBAAG,KAAKC,MAAR,2BAAkB,KAAKC,YAAL,CAAkBV,MAAlB,CAA1B;;AACA,cAAI,CAACQ,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,KAAKG,YAAL,CAAkBX,MAAlB,CAAP;AACAE,YAAAA,GAAG,CAAC,gBAAD,CAAH;AACH;;AACD,iBAAOM,IAAP;AACH,SAf0C,CAgB3C;;AAEA;AACA;;;AACAI,QAAAA,OAAO,CAACC,CAAD,EAAYC,CAAZ,EAAuB;AAC1B,cAAMN,IAAI,GAAG,KAAKD,iBAAL,EAAb;AACA,cAAI,CAACC,IAAL,EAAW;AAEXA,UAAAA,IAAI,CAACA,IAAL,GAAY,IAAIP,IAAJ,CAASY,CAAT,EAAYC,CAAZ,CAAZ;AACAZ,UAAAA,GAAG,0DAAgBW,CAAhB,YAAwBC,CAAxB,CAAH;AACH,SA1B0C,CA2B3C;;AAEA;AACA;;;AACAC,QAAAA,OAAO,CAACC,GAAD,EAAyB;AAAA,cAAxBA,GAAwB;AAAxBA,YAAAA,GAAwB,GAAZ,IAAIf,IAAJ,EAAY;AAAA;;AAC5B,cAAMO,IAAI,GAAG,KAAKD,iBAAL,EAAb;AACA,cAAI,CAACC,IAAL,EAAW,OAAOQ,GAAP;AAEX,iBAAOR,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAP;AACH,SApC0C,CAqC3C;;AAEA;AACA;;;AACAC,QAAAA,YAAY,CAACC,QAAD,EAAmBC,UAAnB,EAAqC;AAC7C,cAAMX,IAAI,GAAG,KAAKD,iBAAL,EAAb;AACA,cAAI,CAACC,IAAL,EAAW;AAEX,cAAMY,SAAS,GAAGZ,IAAI,CAACA,IAAL,CAAUa,KAAV,EAAlB;AACA,cAAIC,OAAO,GAAG,CAAd;AACA,eAAKC,QAAL,CAAeC,EAAD,IAAQ;AAClBF,YAAAA,OAAO,IAAIE,EAAX;AACA,gBAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,OAAO,GAAGJ,QAAnB,EAA6B,CAA7B,CAAV;AACAV,YAAAA,IAAI,CAACA,IAAL,GAAYY,SAAS,CAACQ,IAAV,CAAeT,UAAf,EAA2BM,CAA3B,CAAZ;;AACA,gBAAIA,CAAC,IAAI,CAAT,EAAY;AACR,mBAAKI,sBAAL;AACA3B,cAAAA,GAAG,CAAC,QAAD,CAAH;AACH;AACJ,WARD,EAQG,CARH,EAQM,CARN,EAQS,CART;AASH,SAxD0C,CAyD3C;;AAEA;AACA;;;AACA4B,QAAAA,MAAM,GAAG;AACL,eAAKlB,OAAL,CAAa,EAAb,EAAiB,EAAjB,EADK,CACiB;AACzB;;AAEDmB,QAAAA,KAAK,GAAG;AACJ;AACA,eAAKC,YAAL,CAAkB,MAAM,KAAKf,YAAL,CAAkB,CAAlB,EAAqB,IAAIhB,IAAJ,CAAS,EAAT,EAAa,EAAb,CAArB,CAAxB,EAAgE,CAAhE;AACH,SApE0C,CAqE3C;;;AArE2C,O;;;;;iBAKnB,I","sourcesContent":["// Lesson49_UISkew.ts\n\nimport { _decorator, Component, UISkew, Vec2, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson49_UISkew\n * 演示 Cocos Creator 3.8 UISkew 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n */\n@ccclass('Lesson49_UISkew')\nexport class Lesson49_UISkew extends Component {\n\n    /* ========================= 1. 获取/创建 UISkew 组件 ========================= */\n    // #region 获取/创建 UISkew\n    @property({ type: UISkew })\n    uiSkew: UISkew | null = null;\n\n    /** 运行时动态创建或获取 UISkew 组件 */\n    getOrCreateUISkew(): UISkew | null {\n        let skew = this.uiSkew ?? this.getComponent(UISkew);\n        if (!skew) {\n            skew = this.addComponent(UISkew);\n            log('动态添加 UISkew 组件');\n        }\n        return skew;\n    }\n    // #endregion\n\n    /* ========================= 2. 设置斜切角度 ========================= */\n    // #region 设置斜切角度\n    setSkew(x: number, y: number) {\n        const skew = this.getOrCreateUISkew();\n        if (!skew) return;\n\n        skew.skew = new Vec2(x, y);\n        log(`斜切角度已设置为: X=${x}, Y=${y}`);\n    }\n    // #endregion\n\n    /* ========================= 3. 获取斜切角度 ========================= */\n    // #region 获取斜切角度\n    getSkew(out: Vec2 = new Vec2()) {\n        const skew = this.getOrCreateUISkew();\n        if (!skew) return out;\n\n        return skew.getSkew(out);\n    }\n    // #endregion\n\n    /* ========================= 4. 动态调整斜切角度 ========================= */\n    // #region 动态调整斜切角度\n    skewOverTime(duration: number, targetSkew: Vec2) {\n        const skew = this.getOrCreateUISkew();\n        if (!skew) return;\n\n        const startSkew = skew.skew.clone();\n        let elapsed = 0;\n        this.schedule((dt) => {\n            elapsed += dt;\n            const t = Math.min(elapsed / duration, 1);\n            skew.skew = startSkew.lerp(targetSkew, t);\n            if (t >= 1) {\n                this.unscheduleAllCallbacks();\n                log('斜切动画完成');\n            }\n        }, 0, 0, 0);\n    }\n    // #endregion\n\n    /* ========================= 5. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        this.setSkew(10, 20); // 初始化斜切角度\n    }\n\n    start() {\n        // 演示：3 秒后斜切角度变为 (30, 40)\n        this.scheduleOnce(() => this.skewOverTime(2, new Vec2(30, 40)), 3);\n    }\n    // #endregion\n}"]}