{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson31_UITransform.ts"],"names":["_decorator","Component","UITransform","Size","Vec2","Vec3","ccclass","property","Lesson31_UITransform","demoSizeAnchor","ui","getComponent","setContentSize","setAnchorPoint","demoCoordinate","worldPos","convertToWorldSpaceAR","localPos","convertToNodeSpaceAR","demoBoundingBox","localBox","getBoundingBox","worldBox","getBoundingBoxToWorld","aabb","getComputeAABB","demoHitTest","screenPoint","hitNode","hitTest","demoPriority","priority","dynamicAdjust","schedule","size","contentSize","width","height","start"],"mappings":"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","sourcesContent":["// Lesson31_UITransform.ts\nimport { _decorator, Component, UITransform, Size, Vec2, Vec3, Rect, Color } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * UITransform 常见 API 使用案例\n * 核心类：Lesson31_UITransform\n */\n@ccclass('Lesson31_UITransform')\nexport class Lesson31_UITransform extends Component {\n\n    /* ------------------ 1. 基础尺寸与锚点 ------------------ */\n    //#region 1. 尺寸与锚点\n    private demoSizeAnchor() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 设置内容尺寸\n        ui.setContentSize(200, 100);\n        ui.setContentSize(new Size(300, 150));\n\n        // 设置锚点\n        ui.setAnchorPoint(0.5, 0.5);\n        ui.setAnchorPoint(new Vec2(0, 1)); // 左上角\n    }\n    //#endregion\n\n    /* ------------------ 2. 坐标系转换 ------------------ */\n    //#region 2. 坐标转换\n    private demoCoordinate() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 节点局部坐标 → 世界坐标\n        const worldPos = ui.convertToWorldSpaceAR(new Vec3(0, 0, 0));\n\n        // 世界坐标 → 节点局部坐标\n        const localPos = ui.convertToNodeSpaceAR(worldPos);\n    }\n    //#endregion\n\n    /* ------------------ 3. 包围盒获取 ------------------ */\n    //#region 3. 包围盒\n    private demoBoundingBox() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 自身在父节点坐标系中的包围盒\n        const localBox = ui.getBoundingBox();\n\n        // 世界坐标系下包含子节点的总包围盒\n        const worldBox = ui.getBoundingBoxToWorld();\n\n        // 计算世界空间 AABB\n        const aabb = ui.getComputeAABB();\n    }\n    //#endregion\n\n    /* ------------------ 4. 点击测试 ------------------ */\n    //#region 4. 点击测试\n    private demoHitTest() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 判断本地 UI 坐标点是否命中当前节点（不推荐使用）\n        // const hitUI = ui.isHit(new Vec2(100, 100));\n\n        // 推荐使用新版 hitTest（屏幕坐标 → 节点局部）\n        const screenPoint = new Vec2(200, 300);\n        const hitNode = ui.hitTest(screenPoint);\n    }\n    //#endregion\n\n    /* ------------------ 5. 渲染优先级 ------------------ */\n    //#region 5. 渲染顺序\n    private demoPriority() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 设置同一层级下的渲染顺序（数值越大越靠前）\n        ui.priority = 10;\n    }\n    //#endregion\n\n    /* ------------------ 6. 运行时动态修改示例 ------------------ */\n    //#region 6. 动态修改\n    private dynamicAdjust() {\n        const ui = this.getComponent(UITransform)!;\n\n        // 每帧让节点尺寸逐渐增大\n        this.schedule(() => {\n            const size = ui.contentSize;\n            ui.setContentSize(size.width + 1, size.height + 1);\n        }, 0.1);\n    }\n    //#endregion\n\n    /* ------------------ 7. 生命周期 ------------------ */\n    //#region 7. 生命周期\n    protected start() {\n        this.demoSizeAnchor();\n        this.demoCoordinate();\n        this.demoBoundingBox();\n        this.demoHitTest();\n        this.demoPriority();\n        this.dynamicAdjust();\n    }\n    //#endregion\n}"]}