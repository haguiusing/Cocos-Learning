{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson36_ScrollView.ts"],"names":["_decorator","Component","ScrollView","EventHandler","Vec2","log","ccclass","property","Lesson36_ScrollView","type","getOrCreateScrollView","sv","scrollView","getComponent","addComponent","toggleBasicSettings","vertical","horizontal","elastic","inertia","brake","bounceDuration","scrollToTopDemo","scrollToTop","scrollToBottomDemo","scrollToBottom","scrollToOffsetDemo","scrollToOffset","scrollToPercentDemo","scrollToPercentVertical","logScrollInfo","offset","getScrollOffset","maxOffset","getMaxScrollOffset","isScrolling","isAutoScrolling","stopScrolling","stopAutoScroll","addScrollEvents","scrollEvents","handler","target","node","component","push","onScrollEvent","eventType","customEventData","addNodeEvents","on","EventType","SCROLL_TO_TOP","SCROLL_TO_BOTTOM","SCROLLING","onLoad","start","scheduleOnce"],"mappings":"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","sourcesContent":["// Lesson36_ScrollView.ts\n\nimport { _decorator, Component, ScrollView, EventHandler, Vec2, Vec3, Node, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson36_ScrollView\n * 演示 Cocos Creator 3.8 ScrollView 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n */\n@ccclass('Lesson36_ScrollView')\nexport class Lesson36_ScrollView extends Component {\n\n    /* ========================= 1. 获取 ScrollView 组件 ========================= */\n    // #region 获取 ScrollView\n    @property({ type: ScrollView })\n    scrollView: ScrollView | null = null;\n\n    /** 运行时获取或动态创建 ScrollView */\n    getOrCreateScrollView(): ScrollView | null {\n        let sv = this.scrollView ?? this.getComponent(ScrollView);\n        if (!sv) {\n            sv = this.addComponent(ScrollView);\n            log('动态添加 ScrollView 组件');\n        }\n        return sv;\n    }\n    // #endregion\n\n    /* ========================= 2. 基础开关设置 ========================= */\n    // #region 基础开关\n    toggleBasicSettings() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 开启/关闭 垂直滚动\n        sv.vertical = true;\n\n        // 开启/关闭 水平滚动\n        sv.horizontal = false;\n\n        // 开启/关闭 弹性回弹\n        sv.elastic = true;\n\n        // 开启/关闭 惯性滚动\n        sv.inertia = true;\n\n        // 设置惯性刹车系数 0~1，0 永不停止，1 立即停下\n        sv.brake = 0.5;\n\n        // 回弹时长\n        sv.bounceDuration = 0.5;\n    }\n    // #endregion\n\n    /* ========================= 3. 程序化滚动 ========================= */\n    // #region 程序化滚动\n    scrollToTopDemo() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 0.3 秒滚动到顶部\n        sv.scrollToTop(0.3);\n    }\n\n    scrollToBottomDemo() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 0.3 秒滚动到底部\n        sv.scrollToBottom(0.3);\n    }\n\n    scrollToOffsetDemo() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 滚动到指定偏移（像素）\n        sv.scrollToOffset(new Vec2(0, 100), 0.2);\n    }\n\n    scrollToPercentDemo() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 滚动到垂直 50% 位置\n        sv.scrollToPercentVertical(0.5, 0.2);\n    }\n    // #endregion\n\n    /* ========================= 4. 获取滚动信息 ========================= */\n    // #region 滚动信息\n    logScrollInfo() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        const offset = sv.getScrollOffset();\n        const maxOffset = sv.getMaxScrollOffset();\n        log(`当前偏移: ${offset}`);\n        log(`最大偏移: ${maxOffset}`);\n        log(`是否正在拖拽: ${sv.isScrolling()}`);\n        log(`是否惯性滚动: ${sv.isAutoScrolling()}`);\n    }\n    // #endregion\n\n    /* ========================= 5. 停止滚动 ========================= */\n    // #region 停止滚动\n    stopScrolling() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        sv.stopAutoScroll();\n        log('已强制停止滚动');\n    }\n    // #endregion\n\n    /* ========================= 6. 事件监听 ========================= */\n    // #region 事件监听\n    addScrollEvents() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        // 方式 1：使用 ScrollView 自带回调\n        sv.scrollEvents = [];\n        const handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'Lesson36_ScrollView';\n        handler.handler = 'onScrollEvent';\n        sv.scrollEvents.push(handler);\n    }\n\n    onScrollEvent(scrollView: ScrollView, eventType: string, customEventData: string) {\n        log(`ScrollView 事件: ${eventType}`);\n    }\n\n    // 方式 2：直接监听节点事件\n    addNodeEvents() {\n        const sv = this.getOrCreateScrollView();\n        if (!sv) return;\n\n        sv.node.on(ScrollView.EventType.SCROLL_TO_TOP, () => log('滚动到顶部'));\n        sv.node.on(ScrollView.EventType.SCROLL_TO_BOTTOM, () => log('滚动到底部'));\n        sv.node.on(ScrollView.EventType.SCROLLING, () => log('正在滚动'));\n    }\n    // #endregion\n\n    /* ========================= 7. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        this.toggleBasicSettings();\n        this.addScrollEvents();\n        this.addNodeEvents();\n    }\n\n    start() {\n        // 演示：3 秒后滚动到底部\n        this.scheduleOnce(() => this.scrollToBottomDemo(), 3);\n    }\n    // #endregion\n}"]}