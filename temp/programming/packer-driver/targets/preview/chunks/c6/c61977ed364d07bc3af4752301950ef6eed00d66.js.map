{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson40_LabelShadow.ts"],"names":["_decorator","Component","LabelShadow","Label","Color","Vec2","log","ccclass","property","Lesson40_LabelShadow","type","tooltip","getOrCreateLabelShadow","shadow","labelShadow","getComponent","addComponent","setByLabelShadow","offset","color","BLACK","blur","setByLabelEnableShadow","lbl","label","enableShadow","shadowColor","GRAY","shadowOffset","shadowBlur","disableShadow","toggleShadowStyle","equals","BLUE","Math","random","onLoad","start","scheduleOnce"],"mappings":"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","sourcesContent":["// Lesson40_LabelShadow.ts\n\nimport { _decorator, Component, LabelShadow, Label, Color, Vec2, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson40_LabelShadow\n * 演示 Cocos Creator 3.8 **LabelShadow** 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n * ⚠️ 注意：LabelShadow 自 v3.8.2 起已废弃，请改用 Label.enableShadow。\n */\n@ccclass('Lesson40_LabelShadow')\nexport class Lesson40_LabelShadow extends Component {\n\n    /* ========================= 1. 获取/创建 LabelShadow（旧写法） ========================= */\n    // #region 获取/创建 LabelShadow\n    @property({ type: LabelShadow, tooltip: '已废弃，仅作演示' })\n    labelShadow: LabelShadow | null = null;\n\n    /** 运行时动态创建 LabelShadow（旧写法） */\n    getOrCreateLabelShadow(): LabelShadow | null {\n        let shadow = this.labelShadow ?? this.getComponent(LabelShadow);\n        if (!shadow) {\n            shadow = this.addComponent(LabelShadow);\n            log('动态添加 LabelShadow 组件（已废弃）');\n        }\n        return shadow;\n    }\n    // #endregion\n\n    /* ========================= 2. 旧 API 设置阴影样式 ========================= */\n    // #region 旧 API 设置\n    /** 使用已废弃的 LabelShadow 设置阴影 */\n    setByLabelShadow() {\n        const shadow = this.getOrCreateLabelShadow();\n        if (!shadow) return;\n\n        // 已废弃的属性\n        shadow.offset = new Vec2(5, -5);          // 阴影偏移\n        shadow.color = Color.BLACK;               // 阴影颜色\n        shadow.blur = 2;                          // 阴影模糊程度\n        log('通过 LabelShadow 设置阴影（已废弃）');\n    }\n    // #endregion\n\n    /* ========================= 3. 新 API：使用 Label.enableShadow ========================= */\n    // #region 新 API 设置\n    @property({ type: Label })\n    label: Label | null = null;\n\n    /** 通过 Label.enableShadow 设置阴影（推荐） */\n    setByLabelEnableShadow() {\n        const lbl = this.label ?? this.getComponent(Label);\n        if (!lbl) return;\n\n        lbl.enableShadow = true;                  // 开启阴影\n        lbl.shadowColor = Color.GRAY;             // 阴影颜色\n        lbl.shadowOffset = new Vec2(4, -4);       // 阴影偏移\n        lbl.shadowBlur = 3;                       // 阴影模糊程度\n        log('通过 Label.enableShadow 设置阴影（推荐）');\n    }\n\n    /** 关闭阴影 */\n    disableShadow() {\n        const lbl = this.label ?? this.getComponent(Label);\n        if (lbl) lbl.enableShadow = false;\n    }\n    // #endregion\n\n    /* ========================= 4. 动态切换阴影样式 ========================= */\n    // #region 动态切换\n    toggleShadowStyle() {\n        const lbl = this.label ?? this.getComponent(Label);\n        if (!lbl) return;\n\n        // 每次点击切换不同颜色\n        if (lbl.enableShadow) {\n            lbl.shadowColor = lbl.shadowColor.equals(Color.GRAY) ? Color.BLUE : Color.GRAY;\n            lbl.shadowBlur = Math.random() * 5 + 1;\n        } else {\n            this.setByLabelEnableShadow();\n        }\n    }\n    // #endregion\n\n    /* ========================= 5. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        // 旧写法（兼容老项目）\n        this.setByLabelShadow();\n\n        // 新写法（推荐）\n        this.setByLabelEnableShadow();\n    }\n\n    start() {\n        // 演示：2 秒后切换一次阴影样式\n        this.scheduleOnce(() => this.toggleShadowStyle(), 2);\n    }\n    // #endregion\n}"]}