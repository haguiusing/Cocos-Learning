{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/2D%20%E6%B8%B2%E6%9F%93/Lesson19_.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","Color","Vec2","Size","UITransform","ccclass","property","Lesson19_","demoBasic","sprite","spriteFrame","frame1","color","RED","grayscale","demoSizeAndType","sizeMode","SizeMode","CUSTOM","node","getComponent","setContentSize","type","Type","FILLED","demoFill","fillType","FillType","HORIZONTAL","fillStart","fillRange","fillCenter","demoAtlas","changeSpriteFrameFromAtlas","demoFind","self","childrenSprites","getComponentsInChildren","console","log","length","start","onDestroy","unscheduleAllCallbacks"],"mappings":"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","sourcesContent":["// Lesson19_.ts\nimport { _decorator, Component, Node, Sprite, SpriteFrame, Color, Vec2, Size, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Sprite 组件 API 演示脚本（官方文档全功能整合）\n * 核心类：Lesson19_\n */\n@ccclass('Lesson19_')\nexport class Lesson19_ extends Component {\n\n    /* ------------------ 1. 声明属性 ------------------ */\n    //#region 声明属性\n    @property(Sprite)\n    sprite: Sprite = null!;\n\n    @property(SpriteFrame)\n    frame1: SpriteFrame = null!;\n\n    @property(SpriteFrame)\n    frame2: SpriteFrame = null!;\n    //#endregion\n\n    /* ------------------ 2. 基础设置 ------------------ */\n    //#region 基础设置\n    private demoBasic() {\n        // 切换精灵帧\n        this.sprite.spriteFrame = this.frame1;\n\n        // 设置渲染颜色（乘贴图）\n        this.sprite.color = Color.RED;\n\n        // 启用灰度\n        this.sprite.grayscale = true;\n    }\n    //#endregion\n\n    /* ------------------ 3. 尺寸模式与类型 ------------------ */\n    //#region 尺寸与类型\n    private demoSizeAndType() {\n        // 尺寸模式\n        this.sprite.sizeMode = Sprite.SizeMode.CUSTOM; // 或 TRIMMED / RAW\n        // 自定义尺寸\n        this.sprite.node.getComponent(UITransform)?.setContentSize(new Size(300, 200));\n\n        // 渲染类型\n        this.sprite.type = Sprite.Type.FILLED;         // SIMPLE / SLICED / TILED / FILLED\n    }\n    //#endregion\n\n    /* ------------------ 4. 填充模式（Filled） ------------------ */\n    //#region 填充\n    private demoFill() {\n        this.sprite.type           = Sprite.Type.FILLED;\n        this.sprite.fillType       = Sprite.FillType.HORIZONTAL; // 水平填充\n        this.sprite.fillStart      = 0;     // 起始点 [-1,1]\n        this.sprite.fillRange      = 0.5;   // 填充范围 [-1,1]\n        this.sprite.fillCenter     = new Vec2(0.5, 0.5); // 中心点\n    }\n    //#endregion\n\n    /* ------------------ 5. 动态切换图集帧 ------------------ */\n    //#region 图集切换\n    private demoAtlas() {\n        // 若 spriteAtlas 已赋值，可直接通过名字切换\n        this.sprite.changeSpriteFrameFromAtlas('icon2');\n    }\n    //#endregion\n\n    /* ------------------ 6. 获取父节点/子节点组件 ------------------ */\n    //#region 组件查找\n    private demoFind() {\n        // 获取自身 Sprite\n        const self = this.node.getComponent(Sprite);\n\n        // 获取子节点里所有 Sprite\n        const childrenSprites = this.node.getComponentsInChildren(Sprite);\n\n        console.log('Self: ', self);\n        console.log('Children sprites count: ', childrenSprites.length);\n    }\n    //#endregion\n\n    /* ------------------ 7. 生命周期事件 ------------------ */\n    //#region 生命周期\n    protected start() {\n        this.demoBasic();\n        this.demoSizeAndType();\n        this.demoFill();\n        this.demoAtlas();\n        this.demoFind();\n    }\n\n    protected onDestroy() {\n        // 取消所有定时器\n        this.unscheduleAllCallbacks();\n    }\n    //#endregion\n}"]}