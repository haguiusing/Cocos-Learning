{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/Lesson14_.ts"],"names":["_decorator","Component","input","Input","KeyCode","Camera","geometry","PhysicsSystem","Node","ccclass","property","Lesson14_","_ray","Ray","registerTouch","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","event","console","log","getLocation","getUILocation","unregisterTouch","off","registerKeyboard","KEY_DOWN","onKeyDown","KEY_PRESSING","onKeyPressing","KEY_UP","onKeyUp","keyCode","KEY_A","SPACE","KEY_S","unregisterKeyboard","registerDeviceMotion","setAccelerometerEnabled","DEVICEMOTION","onDeviceMotion","acc","x","toFixed","y","unregisterDeviceMotion","registerRaycast","on3DTouch","cameraCom","targetNode","touch","screenPointToRay","getLocationX","getLocationY","instance","raycast","results","raycastResults","hit","collider","node","unregisterRaycast","onEnable","onDisable"],"mappings":"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","sourcesContent":["// Lesson14_.ts\nimport {\n    _decorator,\n    Component,\n    input,\n    Input,\n    EventTouch,\n    EventKeyboard,\n    KeyCode,\n    EventAcceleration,\n    Camera,\n    geometry,\n    PhysicsSystem,\n    Node,\n} from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 输入事件系统示例：触摸、键盘、重力感应、3D 射线检测\n * 核心类：Lesson14_\n */\n@ccclass('Lesson14_')\nexport class Lesson14_ extends Component {\n\n    /* ------------------ 1. 触摸事件 ------------------ */\n    //#region Touch\n    private registerTouch() {\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this); // 触摸开始\n        input.on(Input.EventType.TOUCH_MOVE,  this.onTouchMove,  this); // 触摸移动\n        input.on(Input.EventType.TOUCH_END,   this.onTouchEnd,   this); // 触摸结束\n        input.on(Input.EventType.TOUCH_CANCEL,this.onTouchCancel,this); // 触摸取消\n    }\n\n    private onTouchStart(event: EventTouch) {\n        console.log('[TouchStart]', event.getLocation());\n    }\n    private onTouchMove(event: EventTouch) {\n        console.log('[TouchMove] ', event.getUILocation());\n    }\n    private onTouchEnd(event: EventTouch) {\n        console.log('[TouchEnd]  ', event.getLocation());\n    }\n    private onTouchCancel(event: EventTouch) {\n        console.log('[TouchCancel]');\n    }\n\n    private unregisterTouch() {\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.off(Input.EventType.TOUCH_MOVE,  this.onTouchMove,  this);\n        input.off(Input.EventType.TOUCH_END,   this.onTouchEnd,   this);\n        input.off(Input.EventType.TOUCH_CANCEL,this.onTouchCancel,this);\n    }\n    //#endregion\n\n    /* ------------------ 2. 键盘事件 ------------------ */\n    //#region Keyboard\n    private registerKeyboard() {\n        input.on(Input.EventType.KEY_DOWN,    this.onKeyDown,    this); // 键盘按下\n        input.on(Input.EventType.KEY_PRESSING, this.onKeyPressing, this); // 键盘长按\n        input.on(Input.EventType.KEY_UP,      this.onKeyUp,      this); // 键盘松开\n    }\n\n    private onKeyDown(event: EventKeyboard) {\n        switch (event.keyCode) {\n            case KeyCode.KEY_A:\n                console.log('[KeyDown] A');\n                break;\n            case KeyCode.SPACE:\n                console.log('[KeyDown] Space');\n                break;\n        }\n    }\n\n    private onKeyPressing(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_S) {\n            console.log('[KeyPressing] S');\n        }\n    }\n\n    private onKeyUp(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_A) {\n            console.log('[KeyUp] A');\n        }\n    }\n\n    private unregisterKeyboard() {\n        input.off(Input.EventType.KEY_DOWN,    this.onKeyDown,    this);\n        input.off(Input.EventType.KEY_PRESSING, this.onKeyPressing, this);\n        input.off(Input.EventType.KEY_UP,      this.onKeyUp,      this);\n    }\n    //#endregion\n\n    /* ------------------ 3. 重力感应事件 ------------------ */\n    //#region DeviceMotion\n    private registerDeviceMotion() {\n        input.setAccelerometerEnabled(true); // 开启重力感应\n        input.on(Input.EventType.DEVICEMOTION, this.onDeviceMotion, this); // 监听重力感应事件\n    }\n\n    private onDeviceMotion(event: EventAcceleration) {\n        console.log('[DeviceMotion]', event.acc.x.toFixed(2), event.acc.y.toFixed(2)); \n    }\n\n    private unregisterDeviceMotion() {\n        input.off(Input.EventType.DEVICEMOTION, this.onDeviceMotion, this);\n    }\n    //#endregion\n\n    /* ------------------ 4. 3D 射线检测（触摸） ------------------ */\n    //#region 3D Raycast\n    @property(Camera)\n    cameraCom: Camera = null!;\n\n    @property(Node)\n    targetNode: Node = null!;\n\n    private _ray = new geometry.Ray();\n\n    private registerRaycast() {\n        input.on(Input.EventType.TOUCH_START, this.on3DTouch, this); // 注册 3D 射线检测触摸事件\n    }\n\n    private on3DTouch(event: EventTouch) {\n        if (!this.cameraCom || !this.targetNode) return;\n\n        const touch = event.touch!;\n        this.cameraCom.screenPointToRay(touch.getLocationX(), touch.getLocationY(), this._ray);\n\n        if (PhysicsSystem.instance.raycast(this._ray)) {\n            const results = PhysicsSystem.instance.raycastResults;\n            for (const hit of results) {\n                if (hit.collider.node === this.targetNode) {\n                    console.log('[Raycast] Hit target node!');\n                    return;\n                }\n            }\n            console.log('[Raycast] Missed target node.');\n        } else {\n            console.log('[Raycast] No hit.');\n        }\n    }\n\n    private unregisterRaycast() {\n        input.off(Input.EventType.TOUCH_START, this.on3DTouch, this);\n    }\n    //#endregion\n\n    /* ------------------ 5. 生命周期 ------------------ */\n    //#region Lifecycle\n    protected onEnable() {\n        this.registerTouch();\n        this.registerKeyboard();\n        this.registerDeviceMotion();\n        this.registerRaycast();\n    }\n\n    protected onDisable() {\n        this.unregisterTouch();\n        this.unregisterKeyboard();\n        this.unregisterDeviceMotion();\n        this.unregisterRaycast();\n    }\n    //#endregion\n}"]}