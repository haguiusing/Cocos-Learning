{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson41_Toggle.ts"],"names":["_decorator","Component","Toggle","EventHandler","log","Node","Sprite","ToggleContainer","ccclass","property","Lesson41_Toggle","type","getOrCreateToggle","t","toggle","getComponent","addComponent","setChecked","value","isChecked","toggleChecked","setCheckMark","checkMarkNode","checkMark","addCheckEvent","handler","target","node","component","checkEvents","push","onToggleChecked","setAsRadioButton","toggleGroupNode","group","removeFromParent","addChild","onLoad","start","scheduleOnce"],"mappings":"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","sourcesContent":["// Lesson41_Toggle.ts\n\nimport { _decorator, Component, Toggle, EventHandler, log, Node, Sprite, ToggleContainer } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson41_Toggle\n * 演示 Cocos Creator 3.8 Toggle 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n */\n@ccclass('Lesson41_Toggle')\nexport class Lesson41_Toggle extends Component {\n\n    /* ========================= 1. 获取/创建 Toggle 组件 ========================= */\n    // #region 获取/创建 Toggle\n    @property({ type: Toggle })\n    toggle: Toggle | null = null;\n\n    /** 运行时动态创建或获取 Toggle 组件 */\n    getOrCreateToggle(): Toggle | null {\n        let t = this.toggle ?? this.getComponent(Toggle);\n        if (!t) {\n            t = this.addComponent(Toggle);\n            log('动态添加 Toggle 组件');\n        }\n        return t;\n    }\n    // #endregion\n\n    /* ========================= 2. 设置选中状态 ========================= */\n    // #region 设置选中状态\n    setChecked(value: boolean) {\n        const t = this.getOrCreateToggle();\n        if (!t) return;\n\n        // 直接设置选中状态\n        t.isChecked = value;\n        log(`当前选中状态: ${t.isChecked}`);\n    }\n\n    /** 切换选中状态 */\n    toggleChecked() {\n        const t = this.getOrCreateToggle();\n        if (!t) return;\n\n        t.isChecked = !t.isChecked;\n        log(`选中状态已切换为: ${t.isChecked}`);\n    }\n    // #endregion\n\n    /* ========================= 3. 设置选中图标 ========================= */\n    // #region 设置选中图标\n    @property({ type: Node })\n    checkMarkNode: Node | null = null;\n\n    setCheckMark() {\n        const t = this.getOrCreateToggle();\n        if (!t) return;\n\n        // 设置选中图标节点\n        if (this.checkMarkNode) {\n            t.checkMark = this.checkMarkNode.getComponent(Sprite);\n        }\n    }\n    // #endregion\n\n    /* ========================= 4. 事件监听 ========================= */\n    // #region 事件监听\n    addCheckEvent() {\n        const t = this.getOrCreateToggle();\n        if (!t) return;\n\n        // 添加选中事件\n        const handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'Lesson41_Toggle';\n        handler.handler = 'onToggleChecked';\n        t.checkEvents.push(handler);\n    }\n\n    onToggleChecked(toggle: Toggle) {\n        log(`Toggle 被选中: ${toggle.isChecked}`);\n    }\n    // #endregion\n\n    /* ========================= 5. 设置为单选按钮（与 ToggleGroup 配合） ========================= */\n    // #region 单选按钮\n    @property({ type: Node })\n    toggleGroupNode: Node | null = null;\n\n    setAsRadioButton() {\n        const t = this.getOrCreateToggle();\n        if (!t) return;\n\n        // 将 Toggle 添加到 ToggleGroup 中\n        if (this.toggleGroupNode) {\n            const group = this.toggleGroupNode.getComponent(ToggleContainer);\n            if (group) {\n                t.node.removeFromParent();\n                group.node.addChild(t.node);\n            }\n        }\n    }\n    // #endregion\n\n    /* ========================= 6. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        this.setChecked(true); // 初始化为选中状态\n        this.addCheckEvent();  // 添加事件监听\n    }\n\n    start() {\n        // 演示：3 秒后切换选中状态\n        this.scheduleOnce(() => this.toggleChecked(), 3);\n    }\n    // #endregion\n}"]}