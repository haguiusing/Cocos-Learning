{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/2D%20%E6%B8%B2%E6%9F%93/Lesson26_.ts"],"names":["_decorator","Component","Node","dragonBones","resources","log","ccclass","property","Lesson26_","ArmatureDisplay","loadDragonBones","loadDir","DragonBonesAsset","err","assets","armatureDisplay","dragonAsset","DragonBonesAtlasAsset","err2","atlas","dragonAtlasAsset","buildArmature","armatures","getArmatureNames","length","armatureName","playRandomAnim","anims","getAnimationNames","anim","Math","floor","random","playAnimation","demoTimeScale","timeScale","toggleCacheMode","mode","isAnimationCached","AnimationCacheMode","REALTIME","SHARED_CACHE","setAnimationCacheMode","toggleBatch","enableBatch","demoSocket","sockets","querySockets","weapon","setParent","node","path","target","boneIndex","listenEvents","on","EventObject","START","COMPLETE","LOOP_COMPLETE","toggleDebugBones","debugBones","start","onDestroy","off"],"mappings":"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","sourcesContent":["// Lesson26_.ts\nimport { _decorator, Component, Node, dragonBones, resources, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * DragonBones ArmatureDisplay 全功能演示\n * 核心类：Lesson26_\n */\n@ccclass('Lesson26_')\nexport class Lesson26_ extends Component {\n\n    /* ------------------ 1. 组件声明 ------------------ */\n    //#region 1. 组件声明\n    @property(dragonBones.ArmatureDisplay)\n    armatureDisplay: dragonBones.ArmatureDisplay = null!;\n    //#endregion\n\n    /* ------------------ 2. 加载骨骼资源 ------------------ */\n    //#region 2. 资源加载\n    private loadDragonBones() {\n        resources.loadDir('dragon', dragonBones.DragonBonesAsset, (err, assets) => {\n            if (err) { log('加载失败', err); return; }\n            this.armatureDisplay.dragonAsset = assets[0] as dragonBones.DragonBonesAsset;\n            // 继续加载图集\n            resources.loadDir('dragon', dragonBones.DragonBonesAtlasAsset, (err2, atlas) => {\n                if (!err2) this.armatureDisplay.dragonAtlasAsset = atlas[0] as dragonBones.DragonBonesAtlasAsset;\n                this.buildArmature();\n            });\n        });\n    }\n    //#endregion\n\n    /* ------------------ 3. 构建骨架 ------------------ */\n    //#region 3. 构建\n    private buildArmature() {\n        const armatures = this.armatureDisplay.getArmatureNames();\n        log('可用骨架:', armatures);\n        if (armatures.length) {\n            this.armatureDisplay.armatureName = armatures[0];\n            this.playRandomAnim();\n        }\n    }\n    //#endregion\n\n    /* ------------------ 4. 动画控制 ------------------ */\n    //#region 4. 动画控制\n    private playRandomAnim() {\n        const anims = this.armatureDisplay.getAnimationNames(this.armatureDisplay.armatureName);\n        if (!anims.length) return;\n        const anim = anims[Math.floor(Math.random() * anims.length)];\n        this.armatureDisplay.playAnimation(anim, -1);   // -1 无限循环\n    }\n    //#endregion\n\n    /* ------------------ 5. 时间缩放 ------------------ */\n    //#region 5. 时间缩放\n    private demoTimeScale() {\n        this.armatureDisplay.timeScale = 0.5; // 0.5 倍速\n    }\n    //#endregion\n\n    /* ------------------ 6. 缓存模式 ------------------ */\n    //#region 6. 缓存模式\n    private toggleCacheMode() {\n        const mode = this.armatureDisplay.isAnimationCached()\n            ? dragonBones.AnimationCacheMode.REALTIME\n            : dragonBones.AnimationCacheMode.SHARED_CACHE;\n        this.armatureDisplay.setAnimationCacheMode(mode);\n    }\n    //#endregion\n\n    /* ------------------ 7. 合批开关 ------------------ */\n    //#region 7. 合批\n    private toggleBatch() {\n        this.armatureDisplay.enableBatch = !this.armatureDisplay.enableBatch;\n    }\n    //#endregion\n\n    /* ------------------ 8. 挂点示例 ------------------ */\n    //#region 8. Socket（挂点）\n    private demoSocket() {\n        // 查询所有挂点\n        const sockets = this.armatureDisplay.querySockets();\n        log('可用挂点:', sockets);\n\n        // 注册一个挂点\n        const weapon = new Node('Weapon');\n        weapon.setParent(this.node);\n        this.armatureDisplay.sockets = [\n            { path: \"hand_r\" ,target: weapon ,boneIndex: 1} // 跟随右手骨骼\n        ];\n    }\n    //#endregion\n\n    /* ------------------ 9. 事件监听 ------------------ */\n    //#region 9. 事件\n    private listenEvents() {\n        this.armatureDisplay.on(dragonBones.EventObject.START, () => log('动画开始'), this);\n        this.armatureDisplay.on(dragonBones.EventObject.COMPLETE, () => log('动画完成'), this);\n        this.armatureDisplay.on(dragonBones.EventObject.LOOP_COMPLETE, () => log('一次循环完成'), this);\n    }\n    //#endregion\n\n    /* ------------------ 10. 调试骨骼 ------------------ */\n    //#region 10. 调试\n    private toggleDebugBones() {\n        this.armatureDisplay.debugBones = !this.armatureDisplay.debugBones;\n    }\n    //#endregion\n\n    /* ------------------ 11. 生命周期 ------------------ */\n    //#region Lifecycle\n    protected start() {\n        if (!this.armatureDisplay) return;\n        this.loadDragonBones();\n        this.listenEvents();\n    }\n\n    protected onDestroy() {\n        this.armatureDisplay?.off(dragonBones.EventObject.COMPLETE, ()=>log(\"\"), this);\n    }\n    //#endregion\n}"]}