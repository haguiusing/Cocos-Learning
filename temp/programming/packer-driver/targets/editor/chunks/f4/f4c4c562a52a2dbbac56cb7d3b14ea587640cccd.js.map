{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/Lesson01_%E7%BB%84%E4%BB%B6%E7%B1%BB%E8%A3%85%E9%A5%B0%E5%99%A8.ts"],"names":["integer","target","propertyKey","Error","type","arg0","_decorator","Color","Component","CurveRange","Enum","Gradient","GradientRange","Label","Node","RealCurve","Sprite","ccclass","property","executeInEditMode","requireComponent","executionOrder","disallowMultiple","menu","help","A","Lesson01_","visible","String","serializable","tooltip","override","group","name","id","displayOrder","start","update","deltaTime","c"],"mappings":"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","sourcesContent":["import { _decorator, AudioSource, Color, Component, CurveRange, Enum, Gradient, GradientRange, Label, Node, RealCurve, Sprite } from 'cc';\r\nconst { ccclass, property\r\n    , executeInEditMode, requireComponent\r\n    , executionOrder, disallowMultiple, menu\r\n    , help} = _decorator;\r\n\r\nenum A {\r\n    c,\r\n    d\r\n}\r\nEnum(A);\r\n\r\n@ccclass('Lesson01_')\r\n//@executeInEditMode(false)  //不允许在编辑模式下运行\r\n//@requireComponent(AudioSource)  //要求节点必须有AudioSource组件\r\n@executionOrder(100)  //设置脚本执行顺序，数字越小，执行越早\r\n@disallowMultiple(true)  //不允许在同一节点上添加多个此组件\r\n@menu('Lesson01_')  //在编辑器菜单中显示此脚本\r\n@help('https://docs.cocos.com/creator/3.8/manual/zh/scripting/decorator.html')  //提供帮助链接\r\nexport class Lesson01_ extends Component {\r\n    //#region 属性装饰器示例\r\n    @property({\r\n        type: Node,\r\n        visible: true,\r\n    })\r\n    Node: Node | null = null;\r\n\r\n    @property // JavaScript 原始类型，根据默认值自动识别为 Creator 的浮点数类型。\r\n    index1 = 0;\r\n    @integer // 声明属性的 cc 类型为整数\r\n    index2 = 0;\r\n\r\n    @property(Node) // 声明属性 cc 类型为 Node。当属性参数只有 type 时可这么写，等价于 @property({type: Node})\r\n    targetNode: Node | null = null; // 等价于 targetNode: Node = null!;\r\n\r\n    // 声明属性 children 的 cc 类型为 Node 数组\r\n    @property({\r\n        type: [Node]\r\n    })\r\n    childrens1: Node[] = [];\r\n    @type([Node]) // 声明属性 children 的 cc 类型为 Node 数组\r\n    childrens2: Node[] = [];\r\n\r\n    @property({\r\n        type: String,\r\n    }) // 警告：不应该使用构造函数 String。等价于 CCString。也可以选择不声明类型\r\n    text1 = '';\r\n    //@type(String) // 警告：不应该使用构造函数 String。等价于 CCString。也可以选择不声明类型\r\n    // JavaScript 原始类型 `number`、`string`、`boolean` 通常可以不用声明\r\n    // 可以直接写\r\n    @property\r\n    text2 = '';\r\n\r\n    @property\r\n    children2 = []; // 未声明 cc 类型，从初始化式的求值结果推断元素为未定义的数组\r\n\r\n    @property\r\n    _valueB = 'abc'; // 此处 '_' 开头的属性，只序列化，不会在编辑器属性面板显示\r\n\r\n    @property({ type: A })\r\n    accx : A = A.c;\r\n    //#endregion\r\n\r\n    //#region visible\r\n    //_ 开头, 不会在编辑器属性面板显示\r\n    @property({ visible: true })\r\n    private _num = 0;\r\n\r\n    @property({ visible: false })\r\n    num1 = 0;\r\n    //#endregion\r\n\r\n    //#region serializable\r\n    @property({ serializable: false })\r\n    num2 = 0;\r\n    //#endregion\r\n\r\n    //#region override\r\n    @property({ tooltip: \"my id\", override: true })\r\n    id = \"\";\r\n    //#endregion\r\n\r\n    //#region group\r\n    // 分组一\r\n    // 组内名为 “bar” 的属性分类，其中包含一个名为 label 的 Label 属性\r\n    @property({ group: { name: 'bar' }, type: Label }) \r\n    label: Label = null!; \r\n    // 组内名为 “foo” 的属性分类，其中包含一个名为 sprite 的 Sprite 属性\r\n    @property({ group: { name: 'foo' }, type: Sprite }) \r\n    sprite: Sprite = null!;\r\n\r\n    // 分组二\r\n    // 组内名为 “bar2” 的属性分类，其中包含名为 label2 的 Label 属性和名为 sprite2 的 Sprite 属性，并且指定排序为 1。\r\n    @property({ group: { name: 'bar2', id: '2', displayOrder: 1 }, type: Label }) \r\n    label2: Label = null!; \r\n    @property({ group: { name: 'bar2', id: '2' }, type: Sprite }) \r\n    sprite2: Sprite = null!;\r\n\r\n    // 分组三\r\n    // 组内名为 “bar” 的属性分类，其中包含名为 label2 的 Label 属性和名为 sprite2 的 Sprite 属性，并且指定排序为 1。\r\n    @property({ group: { name: 'bar2', id: '2', displayOrder: 1 }, displayOrder: 2, type: Label }) \r\n    label3: Label = null!; \r\n    @property({ group: { name: 'bar2', id: '2' }, displayOrder: 1, type: Sprite }) \r\n    sprite3: Sprite = null!;\r\n    //#endregion\r\n\r\n    //#region 内置类型界面\r\n    @property(Color)\r\n    color:Color\r\n\r\n    @property(RealCurve)\r\n    realCurve:RealCurve = new RealCurve();\r\n\r\n    @property(CurveRange)\r\n    curveRange : CurveRange = new CurveRange();\r\n\r\n    @property(Gradient)\r\n    gradient = new Gradient();\r\n\r\n    @property(GradientRange)\r\n    gradientRange:GradientRange = new GradientRange();\r\n    //#endregion\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction integer // 声明属性的 cc 类型为整数\r\n    (target: Lesson01_, propertyKey: 'index2'): void {\r\n        throw new Error('Function not implemented.');\r\n}\r\n\r\nfunction type(arg0: (typeof Node)[]): (target: Lesson01_, propertyKey: \"childrens2\") => void {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n"]}