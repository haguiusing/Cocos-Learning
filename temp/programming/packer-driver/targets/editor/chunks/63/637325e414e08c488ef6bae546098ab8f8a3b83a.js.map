{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/Lesson10_.ts"],"names":["_decorator","Component","SpriteFrame","Texture2D","assetManager","Sprite","ccclass","property","Lesson10_","useInspectorAssets","console","log","texture","spriteFrame","sprite","getComponent","loadLocalAsset","resources","load","err","asset","error","loadRemoteAsset","url","loadRemote","imageAsset","tex","image","loadDeviceAsset","filePath","releaseAsset","start","onDestroy"],"mappings":"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","sourcesContent":["// Lesson10_.ts\nimport { _decorator, Component, SpriteFrame, Texture2D, assetManager, ImageAsset, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 获取与加载资源示例\n * 核心类：Lesson10_\n */\n@ccclass('Lesson10_')\nexport class Lesson10_ extends Component {\n\n    /* ------------------ 1. 在属性检查器中声明资源 ------------------ */\n    //#region 1. 属性面板声明\n    @property(Texture2D)\n    texture: Texture2D = null!;          // 拖拽 Texture2D 到面板\n\n    @property(SpriteFrame)\n    spriteFrame: SpriteFrame = null!;    // 拖拽 SpriteFrame 到面板\n    //#endregion\n\n    /* ------------------ 2. 直接使用已绑定资源 ------------------ */\n    //#region 2. 直接使用已绑定资源\n    private useInspectorAssets() {\n        console.log('Inspector texture:', this.texture);\n        console.log('Inspector spriteFrame:', this.spriteFrame);\n\n        // 示例：把 SpriteFrame 赋给当前节点上的 Sprite\n        const sprite = this.getComponent(Sprite);\n        if (sprite && this.spriteFrame) {\n            sprite.spriteFrame = this.spriteFrame;\n        }\n    }\n    //#endregion\n\n    /* ------------------ 3. 动态加载本地资源 ------------------ */\n    //#region 3. 动态加载\n    private loadLocalAsset() {\n        // 动态加载 resources 目录下的资源\n        assetManager.resources.load('textures/hero', SpriteFrame, (err, asset) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            console.log('Dynamic loaded SpriteFrame:', asset);\n            const sprite = this.getComponent(Sprite);\n            if (sprite) sprite.spriteFrame = asset;\n        });\n    }\n    //#endregion\n\n    /* ------------------ 4. 加载远程 / 设备资源 ------------------ */\n    //#region 4. 加载远程 & 设备资源\n    private loadRemoteAsset(url: string) {\n        // 远程纹理\n        assetManager.loadRemote<ImageAsset>(url, (err, imageAsset) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            const tex = new Texture2D();\n            tex.image = imageAsset;\n            console.log('Remote texture loaded:', tex);\n            // 这里可继续把 Texture2D 赋给 SpriteFrame 或材质\n        });\n    }\n\n    private loadDeviceAsset(filePath: string) {\n        // 本地文件\n        assetManager.loadRemote<ImageAsset>(filePath, (err, imageAsset) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            const tex = new Texture2D();\n            tex.image = imageAsset;\n            console.log('Device texture loaded:', tex);\n        });\n    }\n    //#endregion\n\n    /* ------------------ 5. 释放资源（可选） ------------------ */\n    //#region 5. 释放资源\n    private releaseAsset(asset: any) {\n        assetManager.releaseAsset(asset);\n        console.log('Asset released:', asset);\n    }\n    //#endregion\n\n    /* ------------------ 6. 生命周期 ------------------ */\n    //#region 6. 生命周期\n    protected start() {\n        this.useInspectorAssets();\n        this.loadLocalAsset();\n        // 示例：远程资源\n        // this.loadRemoteAsset('https://example.com/remote.png');\n    }\n\n    protected onDestroy() {\n        // 按需释放\n        if (this.texture) this.releaseAsset(this.texture);\n        if (this.spriteFrame) this.releaseAsset(this.spriteFrame);\n    }\n    //#endregion\n}"]}