{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson44_PageView.ts"],"names":["_decorator","Component","PageView","EventHandler","Node","log","ccclass","property","Lesson44_PageView","type","getOrCreatePageView","pv","pageView","getComponent","addComponent","setHorizontalScroll","direction","Direction","HORIZONTAL","setVerticalScroll","VERTICAL","setUnifiedSizeMode","sizeMode","SizeMode","Unified","setFreeSizeMode","Free","addPage","pageNode","removePageAtIndex","index","removeAllPages","scrollToPage","duration","setCurrentPageIndex","getCurrentPageIndex","addPageTurningEvent","handler","target","node","component","pageEvents","push","onPageTurning","event","customData","onLoad","start","scheduleOnce"],"mappings":";;;;;;;;;;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,G,OAAAA,G;;;;;yFAFpE;;;;;OAGM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;;mCAEaQ,iB,WADZF,OAAO,CAAC,mBAAD,C,UAKHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAkDRK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,2BAvDb,MACaI,iBADb,SACuCP,SADvC,CACiD;AAAA;AAAA;;AAE7C;AACA;AAH6C;;AAkD7C;;AAEA;AACA;AArD6C;AAAA;;AAO7C;AACAS,QAAAA,mBAAmB,GAAoB;AAAA;;AACnC,cAAIC,EAAE,qBAAG,KAAKC,QAAR,6BAAoB,KAAKC,YAAL,CAAkBX,QAAlB,CAA1B;;AACA,cAAI,CAACS,EAAL,EAAS;AACLA,YAAAA,EAAE,GAAG,KAAKG,YAAL,CAAkBZ,QAAlB,CAAL;AACAG,YAAAA,GAAG,CAAC,kBAAD,CAAH;AACH;;AACD,iBAAOM,EAAP;AACH,SAf4C,CAgB7C;;AAEA;AACA;;;AACAI,QAAAA,mBAAmB,GAAG;AAClB,gBAAMJ,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACK,SAAH,GAAed,QAAQ,CAACe,SAAT,CAAmBC,UAAlC;AACH;;AAEDC,QAAAA,iBAAiB,GAAG;AAChB,gBAAMR,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACK,SAAH,GAAed,QAAQ,CAACe,SAAT,CAAmBG,QAAlC;AACH,SAhC4C,CAiC7C;;AAEA;AACA;;;AACAC,QAAAA,kBAAkB,GAAG;AACjB,gBAAMV,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACW,QAAH,GAAcpB,QAAQ,CAACqB,QAAT,CAAkBC,OAAhC;AACH;;AAEDC,QAAAA,eAAe,GAAG;AACd,gBAAMd,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACW,QAAH,GAAcpB,QAAQ,CAACqB,QAAT,CAAkBG,IAAhC;AACH;;AAQDC,QAAAA,OAAO,GAAG;AACN,gBAAMhB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAD,IAAO,CAAC,KAAKiB,QAAjB,EAA2B;AAE3BjB,UAAAA,EAAE,CAACgB,OAAH,CAAW,KAAKC,QAAhB;AACAvB,UAAAA,GAAG,CAAC,OAAD,CAAH;AACH;;AAEDwB,QAAAA,iBAAiB,CAACC,KAAD,EAAgB;AAC7B,gBAAMnB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACkB,iBAAH,CAAqBC,KAArB;AACAzB,UAAAA,GAAG,CAAE,OAAMyB,KAAM,IAAd,CAAH;AACH;;AAEDC,QAAAA,cAAc,GAAG;AACb,gBAAMpB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACoB,cAAH;AACA1B,UAAAA,GAAG,CAAC,SAAD,CAAH;AACH,SA/E4C,CAgF7C;;AAEA;AACA;;;AACA2B,QAAAA,YAAY,CAACF,KAAD,EAAgBG,QAAQ,GAAG,GAA3B,EAAgC;AACxC,gBAAMtB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACqB,YAAH,CAAgBF,KAAhB,EAAuBG,QAAvB;AACA5B,UAAAA,GAAG,CAAE,QAAOyB,KAAM,SAAQG,QAAS,IAAhC,CAAH;AACH,SA1F4C,CA2F7C;;AAEA;AACA;;;AACAC,QAAAA,mBAAmB,CAACJ,KAAD,EAAgB;AAC/B,gBAAMnB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAETA,UAAAA,EAAE,CAACuB,mBAAH,CAAuBJ,KAAvB;AACAzB,UAAAA,GAAG,CAAE,cAAayB,KAAM,EAArB,CAAH;AACH,SArG4C,CAsG7C;;AAEA;AACA;;;AACAK,QAAAA,mBAAmB,GAAG;AAClB,gBAAMxB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAET,gBAAMmB,KAAK,GAAGnB,EAAE,CAACwB,mBAAH,EAAd;AACA9B,UAAAA,GAAG,CAAE,WAAUyB,KAAM,EAAlB,CAAH;AACH,SAhH4C,CAiH7C;;AAEA;AACA;;;AACAM,QAAAA,mBAAmB,GAAG;AAClB,gBAAMzB,EAAE,GAAG,KAAKD,mBAAL,EAAX;AACA,cAAI,CAACC,EAAL,EAAS;AAET,gBAAM0B,OAAO,GAAG,IAAIlC,YAAJ,EAAhB;AACAkC,UAAAA,OAAO,CAACC,MAAR,GAAiB,KAAKC,IAAtB;AACAF,UAAAA,OAAO,CAACG,SAAR,GAAoB,mBAApB;AACAH,UAAAA,OAAO,CAACA,OAAR,GAAkB,eAAlB;AACA1B,UAAAA,EAAE,CAAC8B,UAAH,CAAcC,IAAd,CAAmBL,OAAnB;AACH;;AAEDM,QAAAA,aAAa,CAACC,KAAD,EAAkBC,UAAlB,EAAmC;AAC5CxC,UAAAA,GAAG,CAAE,gBAAeuC,KAAK,CAACT,mBAAN,EAA4B,YAAWU,UAAW,EAAnE,CAAH;AACH,SAlI4C,CAmI7C;;AAEA;AACA;;;AACAC,QAAAA,MAAM,GAAG;AACL,eAAK/B,mBAAL,GADK,CACuB;;AAC5B,eAAKM,kBAAL,GAFK,CAEuB;;AAC5B,eAAKe,mBAAL,GAHK,CAGuB;AAC/B;;AAEDW,QAAAA,KAAK,GAAG;AACJ;AACA,eAAKC,YAAL,CAAkB,MAAM,KAAKhB,YAAL,CAAkB,CAAlB,CAAxB,EAA8C,CAA9C;AACH,SAhJ4C,CAiJ7C;;;AAjJ6C,O;;;;;iBAKjB,I;;;;;;;iBAkDJ,I","sourcesContent":["// Lesson44_PageView.ts\n\nimport { _decorator, Component, PageView, EventHandler, Node, Vec3, log } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Lesson44_PageView\n * 演示 Cocos Creator 3.8 PageView 组件的常见 API 用法\n * 按功能划分为不同折叠块，便于查阅\n */\n@ccclass('Lesson44_PageView')\nexport class Lesson44_PageView extends Component {\n\n    /* ========================= 1. 获取/创建 PageView 组件 ========================= */\n    // #region 获取/创建 PageView\n    @property({ type: PageView })\n    pageView: PageView | null = null;\n\n    /** 运行时动态创建或获取 PageView 组件 */\n    getOrCreatePageView(): PageView | null {\n        let pv = this.pageView ?? this.getComponent(PageView);\n        if (!pv) {\n            pv = this.addComponent(PageView);\n            log('动态添加 PageView 组件');\n        }\n        return pv;\n    }\n    // #endregion\n\n    /* ========================= 2. 设置滚动方向 ========================= */\n    // #region 设置滚动方向\n    setHorizontalScroll() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.direction = PageView.Direction.HORIZONTAL;\n    }\n\n    setVerticalScroll() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.direction = PageView.Direction.VERTICAL;\n    }\n    // #endregion\n\n    /* ========================= 3. 设置页面大小模式 ========================= */\n    // #region 设置页面大小模式\n    setUnifiedSizeMode() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.sizeMode = PageView.SizeMode.Unified;\n    }\n\n    setFreeSizeMode() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.sizeMode = PageView.SizeMode.Free;\n    }\n    // #endregion\n\n    /* ========================= 4. 添加/移除页面 ========================= */\n    // #region 添加/移除页面\n    @property({ type: Node })\n    pageNode: Node | null = null;\n\n    addPage() {\n        const pv = this.getOrCreatePageView();\n        if (!pv || !this.pageNode) return;\n\n        pv.addPage(this.pageNode);\n        log('页面已添加');\n    }\n\n    removePageAtIndex(index: number) {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.removePageAtIndex(index);\n        log(`移除第 ${index} 页`);\n    }\n\n    removeAllPages() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.removeAllPages();\n        log('所有页面已移除');\n    }\n    // #endregion\n\n    /* ========================= 5. 滚动到指定页面 ========================= */\n    // #region 滚动到指定页面\n    scrollToPage(index: number, duration = 0.3) {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.scrollToPage(index, duration);\n        log(`滚动到第 ${index} 页，耗时 ${duration} 秒`);\n    }\n    // #endregion\n\n    /* ========================= 6. 设置当前页面索引 ========================= */\n    // #region 设置当前页面索引\n    setCurrentPageIndex(index: number) {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        pv.setCurrentPageIndex(index);\n        log(`当前页面索引已设置为 ${index}`);\n    }\n    // #endregion\n\n    /* ========================= 7. 获取当前页面索引 ========================= */\n    // #region 获取当前页面索引\n    getCurrentPageIndex() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        const index = pv.getCurrentPageIndex();\n        log(`当前页面索引: ${index}`);\n    }\n    // #endregion\n\n    /* ========================= 8. 事件监听 ========================= */\n    // #region 事件监听\n    addPageTurningEvent() {\n        const pv = this.getOrCreatePageView();\n        if (!pv) return;\n\n        const handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'Lesson44_PageView';\n        handler.handler = 'onPageTurning';\n        pv.pageEvents.push(handler);\n    }\n\n    onPageTurning(event: PageView, customData: any) {\n        log(`页面翻转事件: 当前索引 ${event.getCurrentPageIndex()}, 自定义数据: ${customData}`);\n    }\n    // #endregion\n\n    /* ========================= 9. 生命周期示例 ========================= */\n    // #region 生命周期\n    onLoad() {\n        this.setHorizontalScroll(); // 设置为水平滚动\n        this.setUnifiedSizeMode();  // 设置为统一大小模式\n        this.addPageTurningEvent(); // 添加页面翻转事件\n    }\n\n    start() {\n        // 演示：3 秒后滚动到第 2 页\n        this.scheduleOnce(() => this.scrollToPage(2), 3);\n    }\n    // #endregion\n}"]}