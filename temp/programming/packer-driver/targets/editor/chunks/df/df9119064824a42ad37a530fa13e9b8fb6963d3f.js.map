{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/2D%20%E6%B8%B2%E6%9F%93/Lesson22_.ts"],"names":["_decorator","Component","Graphics","Color","math","ccclass","property","Lesson22_","angle","setupStyle","graphics","lineWidth","strokeColor","RED","fillColor","lineJoin","LineJoin","ROUND","lineCap","LineCap","miterLimit","clearCanvas","clear","drawLine","moveTo","lineTo","stroke","drawRect","rect","fill","roundRect","drawCircle","circle","arc","toRadian","drawBezier","quadraticCurveTo","bezierCurveTo","drawPolygon","close","drawDynamic","rad","x","Math","cos","y","sin","start","schedule","onDestroy","unscheduleAllCallbacks"],"mappings":"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","sourcesContent":["// Lesson22_.ts\nimport { _decorator, Component, Graphics, Color, Vec2, math } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Graphics 绘图 API 全功能演示\n * 核心类：Lesson22_\n */\n@ccclass('Lesson22_')\nexport class Lesson22_ extends Component {\n\n    /* ------------------ 1. 声明 Graphics ------------------ */\n    //#region 1. 声明\n    @property(Graphics)\n    graphics: Graphics = null!;\n    //#endregion\n\n    /* ------------------ 2. 基础属性设置 ------------------ */\n    //#region 2. 基础属性\n    private setupStyle() {\n        this.graphics.lineWidth   = 4;                        // 线宽\n        this.graphics.strokeColor = Color.RED;                // 笔触颜色\n        this.graphics.fillColor   = new Color(0, 0, 255, 80); // 填充颜色\n        this.graphics.lineJoin    = Graphics.LineJoin.ROUND;  // 连接样式\n        this.graphics.lineCap     = Graphics.LineCap.ROUND;   // 端点样式\n        this.graphics.miterLimit  = 10;                       // 斜接限制\n    }\n    //#endregion\n\n    /* ------------------ 3. 清空画布 ------------------ */\n    //#region 3. 清空\n    private clearCanvas() {\n        this.graphics.clear();\n    }\n    //#endregion\n\n    /* ------------------ 4. 直线 & 折线 ------------------ */\n    //#region 4. 直线\n    private drawLine() {\n        this.graphics.moveTo(-100, 0);\n        this.graphics.lineTo(100, 0);\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 5. 矩形 & 圆角矩形 ------------------ */\n    //#region 5. 矩形\n    private drawRect() {\n        // 普通矩形\n        this.graphics.rect(-80, -50, 160, 100);\n        this.graphics.fill();\n        this.graphics.stroke();\n\n        // 圆角矩形\n        this.graphics.roundRect(120, -50, 100, 60, 10);\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 6. 圆形 & 圆弧 ------------------ */\n    //#region 6. 圆形\n    private drawCircle() {\n        // 整圆\n        this.graphics.circle(0, 0, 50);\n        this.graphics.fill();\n\n        // 圆弧\n        this.graphics.arc(200, 0, 40, 0, math.toRadian(135), false);\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 7. 贝塞尔曲线 ------------------ */\n    //#region 7. 贝塞尔\n    private drawBezier() {\n        // 二次贝塞尔\n        this.graphics.moveTo(-200, 100);\n        this.graphics.quadraticCurveTo(-100, 200, 0, 100);\n        this.graphics.stroke();\n\n        // 三次贝塞尔\n        this.graphics.moveTo(100, 100);\n        this.graphics.bezierCurveTo(150, 200, 250, 200, 300, 100);\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 8. 闭合路径 ------------------ */\n    //#region 8. 闭合\n    private drawPolygon() {\n        this.graphics.moveTo(0, 150);\n        this.graphics.lineTo(-50, 200);\n        this.graphics.lineTo(50, 200);\n        this.graphics.close();   // 自动回到起点形成封闭图形\n        this.graphics.fill();\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 9. 实时绘制示例（逐帧动画） ------------------ */\n    //#region 9. 实时绘制\n    private angle = 0;\n    private drawDynamic() {\n        this.angle += 2;\n        const rad = math.toRadian(this.angle);\n        const x = Math.cos(rad) * 80;\n        const y = Math.sin(rad) * 80;\n\n        this.graphics.moveTo(0, 0);\n        this.graphics.lineTo(x, y);\n        this.graphics.stroke();\n    }\n    //#endregion\n\n    /* ------------------ 10. 生命周期 ------------------ */\n    //#region Lifecycle\n    protected start() {\n        this.setupStyle();\n        this.clearCanvas();\n\n        this.drawLine();\n        this.drawRect();\n        this.drawCircle();\n        this.drawBezier();\n        this.drawPolygon();\n\n        // 启动逐帧动画\n        this.schedule(this.drawDynamic, 0.05);\n    }\n\n    protected onDestroy() {\n        this.unscheduleAllCallbacks();\n    }\n    //#endregion\n}"]}