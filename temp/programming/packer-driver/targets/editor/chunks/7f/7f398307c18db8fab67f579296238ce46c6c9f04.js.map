{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/Lesson15_.ts"],"names":["MyEvent","_decorator","Component","Node","Event","macro","UITransform","Sprite","Color","Vec3","Size","ccclass","property","constructor","name","bubbles","detail","Lesson15_","onLoad","registerNodeEvents","registerCustomEvents","onDestroy","unregisterNodeEvents","unregisterCustomEvents","start","demoDispatch","demoMultiTouch","demoPauseResume","node","on","EventType","MOUSE_DOWN","onMouseDown","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","MOUSE_WHEEL","onMouseWheel","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","targetOff","console","log","event","currentTarget","registerCapture","onCaptureTouch","onFoobar","off","type","evt","dispatchEvent","registerNodeBuiltins","SIZE_CHANGED","onSizeChanged","COLOR_CHANGED","onColorChanged","TRANSFORM_CHANGED","onTransformChanged","demoTriggerBuiltins","ui","getComponent","contentSize","sprite","color","RED","position","ENABLE_MULTI_TOUCH","pauseSystemEvents","scheduleOnce","resumeSystemEvents"],"mappings":"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","sourcesContent":["// Lesson15_.ts\nimport {\n    _decorator,\n    Component,\n    Node,\n    Event,\n    macro,\n    UITransform,\n    Sprite,\n    Color,\n    Vec3,\n    Size,\n} from 'cc';\nconst { ccclass, property } = _decorator;\n\n/* -------------------------------------------------------------------------- */\n/*                               自定义事件类                                 */\n/* -------------------------------------------------------------------------- */\n//#region 自定义事件\nclass MyEvent extends Event {\n    public detail: any = null;\n    constructor(name: string, bubbles?: boolean, detail?: any) {\n        super(name, bubbles);\n        this.detail = detail;\n    }\n}\n//#endregion\n\n/* -------------------------------------------------------------------------- */\n/*                           节点事件系统示范脚本                             */\n/* -------------------------------------------------------------------------- */\n@ccclass('Lesson15_')\nexport class Lesson15_ extends Component {\n\n    /* ------------------------------ 生命周期 ------------------------------ */\n    //#region 生命周期\n    protected onLoad(): void {\n        this.registerNodeEvents();\n        this.registerCustomEvents();\n    }\n\n    protected onDestroy(): void {\n        this.unregisterNodeEvents();\n        this.unregisterCustomEvents();\n    }\n\n    protected start(): void {\n        this.demoDispatch();\n        this.demoMultiTouch();\n        this.demoPauseResume();\n    }\n    //#endregion\n\n    /* ------------------------ 1. 节点鼠标 & 触摸事件 ------------------------ */\n    //#region 鼠标/触摸事件\n    private registerNodeEvents() {\n        // 鼠标\n        this.node.on(Node.EventType.MOUSE_DOWN,  this.onMouseDown,  this); // 注册鼠标按下事件\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this); // 注册鼠标进入事件\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this); // 注册鼠标离开事件\n        this.node.on(Node.EventType.MOUSE_WHEEL, this.onMouseWheel, this); // 注册鼠标滚轮事件\n\n        // 触摸（支持冒泡 / 捕获）\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this, false); // 注册触摸开始事件，冒泡阶段\n        this.node.on(Node.EventType.TOUCH_END,   this.onTouchEnd,   this, false); // 注册触摸结束事件\n    }\n\n    private unregisterNodeEvents() {\n        this.node.targetOff(this);\n    }\n\n    private onMouseDown()  { console.log('[Mouse] Down');  }\n    private onMouseEnter() { console.log('[Mouse] Enter'); }\n    private onMouseLeave() { console.log('[Mouse] Leave'); }\n    private onMouseWheel() { console.log('[Mouse] Wheel'); }\n\n    private onTouchStart(event: Event) {\n        console.log('[Touch] Start', event.currentTarget?.name);\n        // 示例：阻止事件冒泡\n        // event.propagationStopped = true;\n    }\n\n    private onTouchEnd(event: Event) {\n        console.log('[Touch] End', event.currentTarget?.name);\n    }\n    //#endregion\n\n    /* ------------------------ 2. 捕获阶段事件注册 ------------------------ */\n    //#region 捕获阶段示例\n    private registerCapture() {\n        this.node.on(Node.EventType.TOUCH_START, this.onCaptureTouch, this, true); // 注册触摸开始事件，捕获阶段\n    }\n\n    private onCaptureTouch() {\n        console.log('[Capture] Touch Start on', this.node.name);\n    }\n    //#endregion\n\n    /* ------------------------ 3. 自定义事件派发 & 冒泡 -------------------- */\n    //#region 自定义事件\n    private registerCustomEvents() {\n        this.node.on('foobar', this.onFoobar, this); // 注册自定义事件 foobar\n    }\n\n    private unregisterCustomEvents() {\n        this.node.off('foobar', this.onFoobar, this);\n    }\n\n    private onFoobar(event: MyEvent) {\n        console.log(`[Custom] ${event.type} detail=${event.detail} on ${this.node.name}`);\n        // 如果要阻止继续冒泡\n        // event.propagationStopped = true;\n    }\n\n    /** 向自身派发自定义事件并允许冒泡 */\n    private demoDispatch() {\n        const evt = new MyEvent('foobar', true, 'detail info'); // 创建自定义事件 foobar，允许冒泡\n        this.node.dispatchEvent(evt);\n    }\n    //#endregion\n\n    /* ------------------------ 4. 节点内置事件示例 ------------------------ */\n    //#region 节点内置事件\n    private registerNodeBuiltins() {\n        // 2D 节点常用事件\n        this.node.on(Node.EventType.SIZE_CHANGED, this.onSizeChanged, this); // 注册尺寸变化事件\n        this.node.on(Node.EventType.COLOR_CHANGED, this.onColorChanged, this); // 注册颜色变化事件\n\n        // 3D 节点常用事件\n        this.node.on(Node.EventType.TRANSFORM_CHANGED, this.onTransformChanged, this); // 注册变换变化事件\n    }\n\n    private onSizeChanged()      { console.log('[Node] Size changed'); }\n    private onColorChanged()     { console.log('[Node] Color changed'); }\n    private onTransformChanged() { console.log('[Node] Transform changed'); }\n\n    /** 演示触发内置事件 */\n    private demoTriggerBuiltins() {\n        // 修改属性触发 SIZE_CHANGED\n        const ui = this.getComponent(UITransform);\n        if (ui) ui.contentSize = new Size(200, 200);\n\n        // 修改颜色触发 COLOR_CHANGED\n        const sprite = this.getComponent(Sprite);\n        if (sprite) sprite.color = Color.RED;\n\n        // 修改位置触发 TRANSFORM_CHANGED\n        this.node.position = new Vec3(100, 100, 0);\n    }\n    //#endregion\n\n    /* ------------------------ 5. 多点触摸开关 --------------------------- */\n    //#region 多点触摸\n    private demoMultiTouch() {\n        // 关闭多点触摸（项目->项目设置->Macro Config 也可配置）\n        // macro.ENABLE_MULTI_TOUCH = false;\n        console.log('[MultiTouch] ENABLE_MULTI_TOUCH =', macro.ENABLE_MULTI_TOUCH);\n    }\n    //#endregion\n\n    /* ------------------------ 6. 暂停/恢复节点系统事件 ------------------- */\n    //#region 暂停/恢复\n    private demoPauseResume() {\n        // 暂停本节点及子节点所有系统事件\n        this.node.pauseSystemEvents(true);\n\n        // 2 秒后恢复\n        this.scheduleOnce(() => {\n            this.node.resumeSystemEvents(true);\n            console.log('[Node] System events resumed');\n        }, 2);\n    }\n    //#endregion\n}"]}