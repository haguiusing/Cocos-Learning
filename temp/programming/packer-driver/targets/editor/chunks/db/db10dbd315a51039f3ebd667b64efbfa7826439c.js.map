{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/Lesson07_.ts"],"names":["_decorator","Component","ccclass","property","Lesson07_","count","callback","startLoopTimer","schedule","doSomething","startComplexTimer","interval","repeat","delay","startOnceTimer","scheduleOnce","startCancelableTimer","unschedule","cancelAllTimers","unscheduleAllCallbacks","start","msg","console","log","onDestroy"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;iFADrB;;;;;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;AAE9B;AACA;AACA;AACA;;2BAEaI,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BH,SAD/B,CACyC;AAAA;AAAA;AA+BrC;;AAEA;AACA;AAlCqC,eAmC7BI,KAnC6B,GAmCb,CAnCa;AAAA,eAoC7BC,QApC6B,GAoCR,IApCQ;AAAA;;AAErC;AACA;AACQC,QAAAA,cAAc,GAAG;AACrB,eAAKC,QAAL,CAAc,MAAM;AAChB,iBAAKC,WAAL,CAAiB,iBAAjB;AACH,WAFD,EAEG,CAFH,EADqB,CAGe;AACvC,SARoC,CASrC;;AAEA;AACA;;;AACQC,QAAAA,iBAAiB,GAAG;AACxB,gBAAMC,QAAQ,GAAG,CAAjB,CADwB,CACF;;AACtB,gBAAMC,MAAM,GAAK,CAAjB,CAFwB,CAEF;;AACtB,gBAAMC,KAAK,GAAM,EAAjB,CAHwB,CAGF;;AAEtB,eAAKL,QAAL,CAAc,MAAM;AAChB,iBAAKC,WAAL,CAAiB,oBAAjB;AACH,WAFD,EAEGE,QAFH,EAEaC,MAFb,EAEqBC,KAFrB;AAGH,SArBoC,CAsBrC;;AAEA;AACA;;;AACQC,QAAAA,cAAc,GAAG;AACrB,eAAKC,YAAL,CAAkB,MAAM;AACpB,iBAAKN,WAAL,CAAiB,kBAAjB;AACH,WAFD,EAEG,CAFH,EADqB,CAGe;AACvC;;AAQOO,QAAAA,oBAAoB,GAAG;AAC3B,eAAKX,KAAL,GAAa,CAAb;;AACA,eAAKC,QAAL,GAAgB,MAAM;AAClB,iBAAKD,KAAL;;AACA,gBAAI,KAAKA,KAAL,IAAc,CAAlB,EAAqB;AACjB,mBAAKY,UAAL,CAAgB,KAAKX,QAArB,EADiB,CACe;;AAChC;AACH;;AACD,iBAAKG,WAAL,CAAkB,oBAAmB,KAAKJ,KAAM,EAAhD;AACH,WAPD;;AAQA,eAAKG,QAAL,CAAc,KAAKF,QAAnB,EAA6B,CAA7B,EAV2B,CAUa;AAC3C,SAjDoC,CAkDrC;;AAEA;AACA;;;AACQY,QAAAA,eAAe,GAAG;AACtB,eAAKC,sBAAL;AACH,SAxDoC,CAyDrC;;AAEA;AACA;;;AACUC,QAAAA,KAAK,GAAG;AACd,eAAKb,cAAL;AACA,eAAKG,iBAAL;AACA,eAAKI,cAAL;AACA,eAAKE,oBAAL;AACH;;AAEOP,QAAAA,WAAW,CAACY,GAAD,EAAc;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACH;;AAEDG,QAAAA,SAAS,GAAG;AACR;AACA,eAAKN,eAAL;AACH,SA3EoC,CA4ErC;;;AA5EqC,O","sourcesContent":["// Lesson0X_.ts\nimport { _decorator, Component } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 计时器（schedule）使用示例\n * 核心类：Lesson07_\n */\n@ccclass('Lesson07_')\nexport class Lesson07_ extends Component {\n\n    /* ------------------ 1. 基础循环计时器 ------------------ */\n    //#region 1. 基础循环计时器\n    private startLoopTimer() {\n        this.schedule(() => {\n            this.doSomething('loop timer tick');\n        }, 5);                              // 每 5 秒执行一次\n    }\n    //#endregion\n\n    /* ------------------ 2. 带参数计时器 ------------------ */\n    //#region 2. 带参数计时器\n    private startComplexTimer() {\n        const interval = 5;   // 间隔（秒）\n        const repeat   = 3;   // 重复次数（实际执行 repeat + 1 次）\n        const delay    = 10;  // 首次执行延迟（秒）\n\n        this.schedule(() => {\n            this.doSomething('complex timer tick');\n        }, interval, repeat, delay);\n    }\n    //#endregion\n\n    /* ------------------ 3. 一次性计时器 ------------------ */\n    //#region 3. 一次性计时器\n    private startOnceTimer() {\n        this.scheduleOnce(() => {\n            this.doSomething('once timer fired');\n        }, 2);                              // 2 秒后执行一次\n    }\n    //#endregion\n\n    /* ------------------ 4. 手动取消计时器 ------------------ */\n    //#region 4. 手动取消计时器\n    private count: number = 0;\n    private callback: Function = null!;\n\n    private startCancelableTimer() {\n        this.count = 0;\n        this.callback = () => {\n            this.count++;\n            if (this.count >= 6) {\n                this.unschedule(this.callback); // 第 6 次后取消\n                return;\n            }\n            this.doSomething(`cancelable timer ${this.count}`);\n        };\n        this.schedule(this.callback, 1);        // 每秒执行一次\n    }\n    //#endregion\n\n    /* ------------------ 5. 取消全部计时器 ------------------ */\n    //#region 5. 取消全部计时器\n    private cancelAllTimers() {\n        this.unscheduleAllCallbacks();\n    }\n    //#endregion\n\n    /* ------------------ 6. 生命周期演示 ------------------ */\n    //#region 6. 生命周期\n    protected start() {\n        this.startLoopTimer();\n        this.startComplexTimer();\n        this.startOnceTimer();\n        this.startCancelableTimer();\n    }\n\n    private doSomething(msg: string) {\n        console.log('[Lesson0X_]', msg);\n    }\n\n    onDestroy() {\n        // 场景销毁时统一清理计时器（可选）\n        this.cancelAllTimers();\n    }\n    //#endregion\n}\n"]}