{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/%E5%8A%A8%E7%94%BB%E7%BC%96%E8%BE%91%E5%99%A8/Lesson01_Animation.ts"],"names":["SetMaterialPropertyValueProxyFactory","_decorator","Component","animation","AnimationClip","Vec3","ccclass","property","Lesson01_Animation","start","animationClip","duration","track","VectorTrack","componentsCount","path","TrackPath","toHierarchy","toProperty","x","y","z","channels","curve","assignSorted","value","vec3KeyFrames","map","time","vec3","addTrack","console","log","specifyTrackPath","trackPath","toComponent","toElement","createValueProxy","valueProxyFactory","proxy","setLoopMode","wrapMode","WrapMode","Loop","constructor","propertyName","_propertyName","forTarget","target","material","set","setProperty"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, animation, AnimationClip, Vec3, Material } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Lesson01_Animation')\nexport class Lesson01_Animation extends Component {\n    //#region 创建动画剪辑\n    start() {\n        // 创建一个新的动画剪辑\n        const animationClip = new AnimationClip();\n        animationClip.duration = 1.0; // 设置动画剪辑的周期为1秒\n\n        // 创建一个向量轨道\n        const track = new animation.VectorTrack();\n        track.componentsCount = 3; // 设置使用向量轨道的前三条通道\n        track.path = new animation.TrackPath().toHierarchy('Foo').toProperty('position'); // 指定目标对象为 \"Foo\" 子节点的 \"position\" 属性\n\n        // 获取向量轨道的通道\n        const [x, y, z] = track.channels();\n\n        // 为 x 通道的曲线添加关键帧\n        x.curve.assignSorted([\n            [0.4, { value: 0.4 }],\n            [0.6, { value: 0.6 }],\n            [0.8, { value: 0.8 }],\n        ]);\n\n        // 使用解构语法为每一条通道曲线赋值\n        const vec3KeyFrames: [number, Vec3][] = [\n            [0.4, new Vec3(1.0, 2.0, 3.0)],\n            [0.6, new Vec3(1.0, 2.0, 3.0)],\n            [0.8, new Vec3(1.0, 2.0, 3.0)],\n        ];\n        x.curve.assignSorted(vec3KeyFrames.map(([time, vec3]) => [time, { value: vec3.x }]));\n        y.curve.assignSorted(vec3KeyFrames.map(([time, vec3]) => [time, { value: vec3.y }]));\n        z.curve.assignSorted(vec3KeyFrames.map(([time, vec3]) => [time, { value: vec3.z }]));\n\n        // 将轨道添加到动画剪辑\n        animationClip.addTrack(track);\n\n        console.log('动画剪辑创建完成');\n    }\n    //#endregion\n\n    //#region 设置轨道路径\n    specifyTrackPath() {\n        // 创建一个轨道路径\n        const trackPath = new animation.TrackPath();\n\n        // 指定目标对象为当前节点的 \"path/to/child\" 子节点的 \"MyComponent\" 组件的 \"myProperty\" 属性的第二个数组元素\n        trackPath\n            .toHierarchy('path/to/child') // 目标对象为当前节点的 “path/to/child” 子节点\n            .toComponent('MyComponent') // 目标对象为 “path/to/child” 子节点的 “MyComponent” 组件\n            .toProperty('myProperty') // 目标对象为 “MyComponent” 组件上的 “myProperty” 属性\n            .toElement(1); // 目标对象为 “myProperty” 属性中的第二个数组元素\n\n        console.log('轨道路径设置完成');\n    }\n    //#endregion\n\n    //#region 创建值代理\n    createValueProxy() {\n\n        // 创建一个轨道路径\n        const trackPath = new animation.TrackPath();\n\n        // 指定目标对象为材质\n        trackPath\n            .toHierarchy('path/to/child')\n            .toComponent('MeshRenderer')\n            .toProperty('materials')\n            .toElement(1);\n\n        // 应用值代理\n        const valueProxyFactory = new SetMaterialPropertyValueProxyFactory('mainColor');\n        const track = new animation.VectorTrack();\n        track.path = trackPath;\n        track.proxy = valueProxyFactory;\n\n        console.log('值代理创建完成');\n    }\n    //#endregion\n\n    //#region 设置循环模式\n    setLoopMode() {\n        // 创建一个新的动画剪辑\n        const animationClip = new AnimationClip();\n        animationClip.duration = 1.0; // 设置动画剪辑的周期为1秒\n\n        // 设置循环模式为循环播放\n        animationClip.wrapMode = AnimationClip.WrapMode.Loop;\n\n        console.log('循环模式设置完成');\n    }\n    //#endregion\n}\n\n// 创建一个值代理工厂\n        class SetMaterialPropertyValueProxyFactory {\n            private _propertyName: string;\n\n            constructor(propertyName: string) {\n                this._propertyName = propertyName;\n            }\n\n            public forTarget(target: unknown): animation.IValueProxy {\n                const material = target as Material;\n                return {\n                    set: (value) => {\n                        material.setProperty(this._propertyName, value);\n                    },\n                };\n            }\n        }"]}