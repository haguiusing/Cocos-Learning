{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E5%9F%BA%E7%A1%80/%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97%E5%8F%8A%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/Lesson05_.ts"],"names":["_decorator","Component","Vec3","ccclass","property","Lesson05_","toggleActive","node","active","console","log","activeInHierarchy","changeParent","parentNode","parent","iterateChildren","child","children","name","length","changePosition","setPosition","position","changeRotation","setRotation","setRotationFromEuler","changeScale","setScale","componentInterface","deltaTime","onLoad","start","update","enabled"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;;;;iFADtC;;;;;OAEM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAE9B;AACA;AACA;AACA;;2BAEaK,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BJ,SAD/B,CACyC;AAErC;AACA;AACQK,QAAAA,YAAY,GAAG;AACnB;AACA,eAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB,CAFmB,CAGnB;;AACA,eAAKD,IAAL,CAAUC,MAAV,GAAmB,IAAnB,CAJmB,CAMnB;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKH,IAAL,CAAUI,iBAA5C;AACH,SAZoC,CAarC;;AAEA;AACA;;;AACQC,QAAAA,YAAY,CAACC,UAAD,EAAmB;AACnC;AACA,eAAKN,IAAL,CAAUO,MAAV,GAAmBD,UAAnB,CAFmC,CAInC;AACA;AACA;AACH,SAxBoC,CAyBrC;;AAEA;AACA;;;AACQE,QAAAA,eAAe,GAAG;AACtB;AACA,eAAK,MAAMC,KAAX,IAAoB,KAAKT,IAAL,CAAUU,QAA9B,EAAwC;AACpCR,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,KAAK,CAACE,IAAjC;AACH,WAJqB,CAMtB;;;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKH,IAAL,CAAUU,QAAV,CAAmBE,MAAlD;AACH,SArCoC,CAsCrC;;AAEA;AACA;;;AACQC,QAAAA,cAAc,GAAG;AACrB;AACA,eAAKb,IAAL,CAAUc,WAAV,CAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B;AACA,eAAKd,IAAL,CAAUc,WAAV,CAAsB,IAAInB,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB,CAAtB,EAHqB,CAKrB;;AACA,eAAKK,IAAL,CAAUe,QAAV,GAAqB,IAAIpB,IAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,CAAjB,CAArB;AACH,SAjDoC,CAkDrC;;AAEA;AACA;;;AACQqB,QAAAA,cAAc,GAAG;AACrB;AACA,eAAKhB,IAAL,CAAUiB,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAFqB,CAIrB;;AACA,eAAKjB,IAAL,CAAUkB,oBAAV,CAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC;AACH,SA5DoC,CA6DrC;;AAEA;AACA;;;AACQC,QAAAA,WAAW,GAAG;AAClB,eAAKnB,IAAL,CAAUoB,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AACH,SAnEoC,CAoErC;;AAEA;AACA;AACA;;;AACQC,QAAAA,kBAAkB,CAACC,SAAD,EAAoB,CAC1C;AACA;AACA;AACA;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACLrB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAEDqB,QAAAA,KAAK,GAAG;AACJtB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AAEDsB,QAAAA,MAAM,CAACH,SAAD,EAAoB;AACtB,cAAI,CAAC,KAAKI,OAAV,EAAmB,OADG,CAEtB;AACH,SA3FoC,CA4FrC;;;AA5FqC,O","sourcesContent":["// Lesson0X_.ts\nimport { _decorator, Component, Node, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 常用节点和组件接口示例\n * 核心类：Lesson05_\n */\n@ccclass('Lesson05_')\nexport class Lesson05_ extends Component {\n\n    /* ------------------ 1. 激活 / 关闭节点 ------------------ */\n    //#region 1. 激活/关闭节点\n    private toggleActive() {\n        // 关闭\n        this.node.active = false;\n        // 激活\n        this.node.active = true;\n\n        // 判断当前是否真正激活\n        console.log('activeInHierarchy:', this.node.activeInHierarchy);\n    }\n    //#endregion\n\n    /* ------------------ 2. 更改节点的父节点 ------------------ */\n    //#region 2. 更改父节点\n    private changeParent(parentNode: Node) {\n        // 方法一：直接赋值\n        this.node.parent = parentNode;\n\n        // 方法二：先移除再添加\n        // this.node.removeFromParent();\n        // parentNode.addChild(this.node);\n    }\n    //#endregion\n\n    /* ------------------ 3. 索引子节点 ------------------ */\n    //#region 3. 索引子节点\n    private iterateChildren() {\n        // 遍历直接子节点\n        for (const child of this.node.children) {\n            console.log('Child name:', child.name);\n        }\n\n        // 子节点数量\n        console.log('Children count:', this.node.children.length);\n    }\n    //#endregion\n\n    /* ------------------ 4. 更改节点位置 ------------------ */\n    //#region 4. 更改位置\n    private changePosition() {\n        // 方式一：setPosition\n        this.node.setPosition(100, 50, 100);\n        this.node.setPosition(new Vec3(200, 200, 0));\n\n        // 方式二：直接赋值\n        this.node.position = new Vec3(300, 0, 0);\n    }\n    //#endregion\n\n    /* ------------------ 5. 更改节点旋转 ------------------ */\n    //#region 5. 更改旋转\n    private changeRotation() {\n        // 四元数\n        this.node.setRotation(0, 0, 0, 1);\n\n        // 欧拉角\n        this.node.setRotationFromEuler(0, 90, 0);\n    }\n    //#endregion\n\n    /* ------------------ 6. 更改节点缩放 ------------------ */\n    //#region 6. 更改缩放\n    private changeScale() {\n        this.node.setScale(2, 2, 2);\n    }\n    //#endregion\n\n    /* ------------------ 7. 常用组件接口 ------------------ */\n    //#region 7. 常用组件接口\n    // 该组件自身可用的属性 / 方法\n    private componentInterface(deltaTime: number) {\n        // this.enabled          -> 是否每帧执行 update\n        // this.update           -> 每帧回调\n        // this.onLoad           -> 节点首次加入节点树\n        // this.start            -> 第一次 update 之前\n    }\n\n    onLoad() {\n        console.log('Lesson05_ onLoad');\n    }\n\n    start() {\n        console.log('Lesson05_ start');\n    }\n\n    update(deltaTime: number) {\n        if (!this.enabled) return;\n        // 每帧逻辑...\n    }\n    //#endregion\n}"]}