{"version":3,"sources":["file:///G:/CocosProjects/Cocos-Learning/assets/Scripts/Cocos%E6%A0%B8%E5%BF%83/2D%20%E5%AF%B9%E8%B1%A1/UI%E7%B3%BB%E7%BB%9F/UI%E7%BB%84%E4%BB%B6/Lesson51_WebView.ts"],"names":["_decorator","Component","EventHandler","WebView","ccclass","property","Lesson51_WebView","start","webView","node","getComponent","url","console","log","onLoad","eventHandler","target","component","handler","customEventData","webviewEvents","onWebViewEvent","eventType","EventType","LOADING","LOADED","ERROR","error","setJavascriptInterfaceScheme","setOnJSCallback","evaluateJS","update","dt","state"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventHandler, Node, WebView } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Lesson51_WebView')\nexport class Lesson51_WebView extends Component {\n    //#region 初始化WebView\n    start() {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 设置WebView加载的网址\n            webView.url = 'https://www.example.com';\n            console.log('WebView加载的网址已设置为:', webView.url);\n        }\n    }\n    //#endregion\n\n    //#region 监听WebView事件\n    onLoad() {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 监听WebView加载过程中的事件\n            const eventHandler = new EventHandler();\n            eventHandler.target = this.node; // 这个对象是你的事件处理代码组件所属的节点\n            eventHandler.component = \"Lesson51_WebView\";\n            eventHandler.handler = \"onWebViewEvent\";\n            eventHandler.customEventData = \"webViewEvent\";\n\n            webView.webviewEvents = [eventHandler];\n        }\n    }\n    onWebViewEvent(eventType: string, customEventData: string) {\n        switch (eventType) {\n            case WebView.EventType.LOADING:\n                console.log('WebView正在加载...');\n                break;\n            case WebView.EventType.LOADED:\n                console.log('WebView加载完成');\n                break;\n            case WebView.EventType.ERROR:\n                console.error('WebView加载出错');\n                break;\n            default:\n                console.log('未知的WebView事件类型:', eventType);\n        }\n        console.log('自定义事件数据:', customEventData);\n    }\n\n    //#endregion\n\n    //#region 设置JavaScript接口方案\n    setJavascriptInterfaceScheme() {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 设置JavaScript接口方案\n            webView.setJavascriptInterfaceScheme('myScheme');\n            console.log('WebView的JavaScript接口方案已设置为:', 'myScheme');\n        }\n    }\n    //#endregion\n\n    //#region 设置JavaScript回调\n    setOnJSCallback() {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 设置JavaScript回调函数\n            webView.setOnJSCallback(() => {\n                console.log('WebView接收到JavaScript消息:');\n            });\n        }\n    }\n    //#endregion\n\n    //#region 执行WebView内部脚本\n    evaluateJS() {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 执行WebView内部页面脚本\n            webView.evaluateJS('alert(\"Hello from WebView!\");');\n            console.log('WebView内部脚本已执行');\n        }\n    }\n    //#endregion\n\n    //#region 获取WebView状态\n    update(dt: number) {\n        // 获取节点上的WebView组件\n        const webView = this.node.getComponent(WebView);\n        if (webView) {\n            // 获取WebView当前状态\n            const state = webView.state;\n            console.log('WebView当前状态:', state);\n        }\n    }\n    //#endregion\n}"]}